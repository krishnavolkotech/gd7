{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
<article{{ attributes.addClass(classes) }}>

    {{ title_prefix }}
    {% if not page %}
        <h2{{ title_attributes }}>
            <a href="{{ url }}" rel="bookmark">{{ label }}</a>
        </h2>
    {% endif %}
    {{ title_suffix }}

    <h4 class='problem_heading'>  {{ "Details"|trans }}</h4>
    <div class="problem-wrapper">
        <div class='problems-backto-search'>{{ back_to_search }}
            <span class="prev-next-element">
                <span class="prev">
                    {{ pre_node_url|raw }}
                </span>
            <span class="next-element">
                {{ next_node_url|raw }}
            </span>
        </span>
        </div>
    </div>
    <table class='problem_info'>

        <tr class='even'>
            <td class='problem_titles'> {{ 'Category 1'|trans }}</td>
            <td class='problem_content'>
                {{ node.field_services.0.entity.field_problem_name.value }} </td>
        </tr>

        <tr class='odd'>
            <td class='problem_titles'>{{ 'Category 2'|trans }}</td>
            <td class='problem_content'>{{ node.field_function.value }}</td>
        </tr>

        <tr class='odd'>
            <td class='problem_titles'>{{ 'Category 3'|trans }}</td>
            <td class='problem_content'>{{ node.field_problem_symptoms.value }}</td>
        </tr>

        <tr class='even'>
            <td class='problem_titles'>{{ 'Affected Release'|trans }}</td>
            <td class='problem_content'>{{ node.field_release.value }}</td>
        </tr>

        <tr class='odd'>
            <td class='problem_titles'>{{ 'Status'|trans }}</td>
            <td class='problem_content'>{{ node.field_problem_status.value }}</td>
        </tr>

        <tr class='even'>
            <td class='problem_titles'>{{ 'Priority'|trans }}</td>
            <td class='problem_content'>{{ node.field_priority.value }}</td>
        </tr>

        <tr class='odd'>
            <td class='problem_titles'>{{ 'Title'|trans }}</td>
            <td class='problem_content'>{{ node.title.value|e }}</td>
        </tr>


        <tr class='even'>
            <td class='problem_titles'>{{ 'Description'|trans }}</td>
            <td class='problem_content problem_content_pdf problem_content_web'>{{ problem_text|raw }}</td>
        </tr>

        <tr class='odd'>
            <td class='problem_titles'>{{ 'Cause'|trans }}</td>
            <td class='problem_content problem_content_pdf problem_content_web'>{{ node.field_diagnose.value }}</td>
        </tr>

        <tr class='even'>
            <td class='problem_titles'>{{ 'Work Around'|trans }}</td>
            <td class='problem_content problem_content_pdf problem_content_web'>{{ node.field_work_around.value|raw }}</td>
        </tr>


        <tr class='odd'>
            <td class='problem_titles'>{{ 'Solution'|trans }}</td>
            <td class='problem_content problem_content_pdf problem_content_web'>{{ node.field_solution.value|raw }}</td>
        </tr>


        <tr class='even'>
            <td class='problem_titles'>{{ 'Fixed with Release'|trans }}</td>
            <td class='problem_content' style="white-space: pre-wrap;">{{ node.field_version.value }}</td>
        </tr>


        <tr class='odd'>
            <td class='problem_titles'>{{ 'Annotations'|trans }}</td>
            <td class='problem_content problem_content_pdf problem_content_web'>{{ node.field_comments.value|raw }}</td>
        </tr>

        <tr class='even'>
            <td class='problem_titles'>{{ 'Ticketstore Link'|trans }}</td>
            <td class='problem_content' style="white-space: pre-wrap;">{{ ticketstore_html }}</td>
        </tr>

        <tr class='odd'>
            <td class='problem_titles'>{{ 'Eroffnet'|trans }}</td>
            <td class='problem_content' style="white-space: pre-wrap;">{{ node.field_eroffnet.value }}</td>
        </tr>

        <tr class='even'>
            <td class='problem_titles'>{{ 'Last Update'|trans }}</td>
            <td class='problem_content' style="white-space: pre-wrap;">{{ node.field_processing.value }}</td>
        </tr>

{#        <tr class='odd'>
            <td class='problem_titles'>{{ 'Closed'|trans }}</td>
            <td class='problem_content' style="white-space: pre-wrap;">{{ node.field_closed.value }}</td>
        </tr>#}

        <tr class='odd'>
            <td class='problem_titles'>{{ 'Taskforce'|trans }}</td>
            <td class='problem_content' style="white-space: pre-wrap;">{{ node.field_task_force.value |raw }}</td>
        </tr>

        <tr class='even'>
            <td class='problem_titles'>{{ 'Proactive Creation'|trans }}</td>
            <td class='problem_content' style="white-space: pre-wrap;">{{ node.field_proactive_creation.value |raw }}</td>
        </tr>

        <tr class='odd'>
            <td class='problem_titles'>{{ 'Interface affected'|trans }}</td>
            <td class='problem_content' style="white-space: pre-wrap;">{{ node.field_interface_affected.value |raw }}</td>
        </tr>

        <tr class='even'>
            <td class='problem_titles'>{{ 'Unlocated Cause'|trans }}</td>
            <td class='problem_content' style="white-space: pre-wrap;">{{ node.field_unlocated_cause.value |raw }}</td>
        </tr>

        <tr class='odd'>
            <td class='problem_titles'>{{ 'Part of LUEAFP'|trans }}</td>
            <td class='problem_content' style="white-space: pre-wrap;">{{ node.field_part_of_lueafp.value |raw }}</td>
        </tr>

        <tr class='even'>
            <td class='problem_titles'>{{ 'ProblemID'|trans }}</td>
            <td class='problem_content'>{{ node.field_orp_nr.value }}</td>
        </tr>

        <tr class='odd'>
            <td class='problem_titles'>{{ 'Attachments'|trans }}</td>
            <td class='problem_content'>{{ node.field_attachment.value }}</td>
        </tr>


    </table>

</article>

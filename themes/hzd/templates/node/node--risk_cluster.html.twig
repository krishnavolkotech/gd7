{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{# {{ attach_library('hzd_risk_management/Chart') }} #}

{# {{ attach_library('hzd_risk_management/cluster_chart') }} #}

{%
  set classes = [
    node.bundle|clean_class,
    node.isPromoted() ? 'is-promoted',
    node.isSticky() ? 'is-sticky',
    not node.isPublished() ? 'is-unpublished',
    view_mode ? view_mode|clean_class,
    'clearfix',
  ]
%}

{# Färben Cluster Klasse #}
{# Das Prüfen der Bedingung klappt noch nicht. Entweder immer rot oder immer gelb. Bei Veränderung anpassen funktioniert nicht
Warum? Was fehlt hier? #}
{# 9 bis 7,5=A, 6,5,4,3=B, 2,1 = C #}
{% if content.field_risks_cluster_class[0] < '3'['#markup']%}
  {% set clusterClassLabelStyle = 'success' %}
{% elseif content.field_risks_cluster_class[0] < '7.5' ['#markup']%}
   {% set clusterClassLabelStyle = 'warning' %}
{% elseif content.field_risks_cluster_class[0] > '7.5'['#markup'] %}
  {% set clusterClassLabelStyle = 'danger' %}
{% else %}
    {% set clusterClassLabelStyle = 'default' %}
{% endif %}

{# Färben zugehörige Einzelrisiken #}
{# Hier muss die Farbe noch zum Risiko gematcht werden und nicht obendrüber. Es gab schon Einstellungen, bei denen das erste Risko default gefärbt wurde
{# Wie muss der content bezeichnet werden, damit es matcht? #}
{# 9=A, 6,4,3=B, 2,1 = C #}

{# {% if '1' in content.field_risks_data[0]['#markup'] #}
    {# or '2' in content.field_risks_data[0]['#markup'] %} #}
  {# {% set riskValueLabelStyle = 'success' %} #}
{# {% elseif '3' in content.field_risks_data[0]['#markup'] #}
    {# or '4' in content.field_risks_data[0]['#markup'] #}
    {# or '6' in content.field_risks_data[0]['#markup'] %} #}
  {# {% set riskValueLabelStyle = 'warning' %} #}
{# {% elseif '9' in content.field_risks_data[0]['#markup'] %} #}
  {# {% set riskValueLabelStyle = 'danger' %} #}
{# {% else %} #}
    {# {% set riskValueLabelStyle = 'default' %} #}
{# {% endif %} #}


<article{{ attributes.addClass(classes) }}>

  {{ title_prefix }}
  {% if not page %}
    <h2{{ title_attributes }}>
      <a href="{{ url }}" rel="bookmark">{{ label }}</a>
    </h2>
  {% endif %}
  {{ title_suffix }}

  {% if display_submitted %}
    <div class="{{ node.bundle }}-author-info">                                                                                                                                                                                                 
      {# author_picture #}
      <div{{ author_attributes.addClass('author') }}>
        {# commenting the below for UI consitency with D6#}
        {#{% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}#}
        {% trans %} {{ author_name }} {{ date }}{% endtrans %}
        {{ metadata }}
      </div>
    </div>
  {% endif %}

  <div{{ content_attributes.addClass('content') }}>
  
  {# {{ kint(node.field_id.0.label) }}  #}
  <div class="container-fluid">
 
    <div class="row">
    {# Risikocluster Rahmeninfo #}
      <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <table>
          <tbody>
            <tr>
              <th scope="row">{{ "ID" }} </th>
              <td > {{ node.field_id.0.value }}</td>
              <th scope="row">{{ content.field_risks_cluster_class['#title'] }} </th>
              <td><span class="label label-{{ clusterClassLabelStyle }} cluster-label">{{ content.field_risks_cluster_class[0] }}</span></td>
{# auskommentiert für Einzelrisiken getrennt von restlichen Angaben über dem Beschreibungsfeld  #}
              {# <th scope="row">{{ content.field_risks_data['#title'] }}</th> #}
              <th scope="row">{{ content.last_updated['#title'] }} </th>
              <td>{{ content.last_updated[0] }}</td>
            </tr>
{# Kommentar entfernen (außer field_risk_data), wenn ID usw zweizeilig angezeigt werden soll, dafür oben alle <td> auskommentieren #}
          {# <tr> #}
              {# <td>{{ node.field_id.0.value }}</td> #}
              {# <td>{{ content.field_risks_cluster_class[0] }}</td> #}
              {# <td>{{ content.field_risks_data[0] }}</td> #}
              {# <td>{{ content.last_updated[0] }}</td> #}
            {# </tr> #}
          </tbody>
        </table>
      </div>
    </div>
   {# Einzelrisiken #}
    <div class="row">
      <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <table>
          <tbody> 
            <tr>
              <th scope="row">{{ content.field_risks_data['#title'] }}</th>
              <td><span class="label label-{{ riskValueLabelStyle }} risk-label">{{ content.field_risks_data[0] }}</span></td>
            </tr>
          </tbody>
        </table>
      </div> 
    </div> 
   
    {# Beschreibung #}
    {% if content.body ['#title']  %}
    <div class="row">
      <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="panel panel-default">
          <div class="panel-heading">
            <h3 class="panel-title">{{ content.body['#title'] }}</h3>
          </div>
          <div class="panel-body">
            {{ content.body[0] }}
          </div>
        </div>
      </div>
    </div> 
    </br>
   {% endif %}
   
    {# Trend #}
    {% if content.field_trend['#title']  %}      
    <div class="row">
      <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="panel panel-default">
          <div class="panel-heading">
            <h3 class="panel-title">{{ content.field_trend['#title'] }}</h3>
          </div>
          <div class="panel-body">
            {{ content.field_trend[0] }}
          </div>
        </div>
      </div> 
    </div>
    </br>
    {% endif %}
    
    {# Bemerkung #}
    {% if content.field_comments ['#title']  %}   
    <div class="row">
      <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="panel panel-default">
          <div class="panel-heading">
            <h3 class="panel-title">{{ content.field_comments['#title'] }}</h3>
          </div>
          <div class="panel-body">
            {{ content.field_comments[0] }}
          </div>
        </div>
      </div>
    </div> 
    </br>   
    {% endif %}
    
    {# Historie #}
    {% if content.content_revision_log %}
    <div class="row">
      <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="panel panel-default">
          <div class="panel-heading">
            <h3 class="panel-title">{{ content.content_revision_log['#title'] }}</h3>
          </div>
          <div class="panel-body">
            {{ content.content_revision_log }}
          </div>
        </div>
      </div>
    </div>
    </br>
    {% endif %}
    
  </div>
  </div>
</article>

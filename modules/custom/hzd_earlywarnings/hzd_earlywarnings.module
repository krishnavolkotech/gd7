<?php
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormState;
use Drupal\Core\Url;
use Drupal\node\Entity\Node;

function getErlywarningServies() {
  $group_id = get_group_id();
  
  $current_url = Url::fromRoute('<current>');
  $path = $current_url->toString();
  $current_path = explode("/", $path);
  $node = \Drupal::routeMatch()->getParameter('node');
  $nid = NULL;
  if ($node) {
    if (!is_object($node)) {
      $node = \Drupal::entityTypeManager()->getStorage('node')->load($node);
    }
    $nid = $node->id();
  }
  $query = \Drupal::database()->select('node_field_data', 'nfd');
  $query->Fields('nfd', array('type'));
  $query->condition('nfd.nid', $nid, '=');
  $type = $query->execute()->fetchField();
  
  if ($type == 'deployed_releases') {
    $services_releases = Drupal\hzd_release_management\HzdreleasemanagementHelper::released_deployed_releases();
    return $services_data = $services_releases['services'];
  }
  
  $group_id = ($group_id ? $group_id : RELEASE_MANAGEMENT);
  
  
  /**
   * $services_obj = \Drupal::database()->query("SELECT title , n.nid FROM {node} n, {group_releases_view} grv
   * WHERE n.nid = grv.service_id and grv.group_id = %d ORDER by title ", $group_id);
   */
  
  //$services['none'] = " < " . t('Service') . ' > ';
  
  $query = \Drupal::database()->select('node_field_data', 'nfd');
  $query->join('group_releases_view', 'grv', 'nfd.nid = grv.service_id');
  $query->Fields('nfd', array('title', 'nid'));
  $query->condition('grv.group_id', $group_id, '=');
  $query->orderBy('title');
  $services = $query->execute()->fetchAllKeyed(1,0);
  return $services;
}

/**
 * implements hook_form_alter
 */
function hzd_earlywarnings_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == 'node_early_warnings_form') {
    $service = \Drupal::request()->query->get('services');
    $rel = \Drupal::request()->query->get('releases');
    // Neu: Service Reference.
    $form['field_service']['widget'][0]['target_id']['#default_value'] = Node::load($service);
    // Neu: Release Reference.
    $form['field_release_ref']['widget'][0]['target_id']['#default_value'] = Node::load($rel);
    if ($rel && $service) {
      $form['field_service']['#attributes']['readonly'] = 'readonly';
      $form['field_release_ref']['#attributes']['readonly'] = 'readonly';
      $form['field_service']['#disabled'] = TRUE;
      $form['field_release_ref']['#disabled'] = TRUE;
    }
  }
  
  return $form;
}

function earlywarning_form_submit(&$form, FormState $formState) {
  $group = \Drupal::routeMatch()->getParameter('group');
  
}

/**
 * @param \Drupal\Core\Entity\EntityInterface $entity
 */
function hzd_earlywarnings_node_insert(EntityInterface $entity) {
  if ($entity->getType() == 'early_warnings') {
    $group = \Drupal::routeMatch()->getParameter('group');
    $plugin = $group->getGroupType()
      ->getContentPlugin('group_node:early_warnings');

    //Adding All Early Warnings to the RELEASE MANAGEMENT GROUP Context
    $values = [
      'type' => $plugin->getContentTypeConfigId(),
//      'gid' => $group->id(),
      'gid' => 1,
      'entity_id' => $entity->id(),
    ];
    $group_content = \Drupal::entityTypeManager()
      ->getStorage('group_content')
      ->create($values)
      ->save();
  }
}

/**
 * implements hook_form_alter
 */
function hzd_earlywarnings_comment_insert(Drupal\Core\Entity\EntityInterface $entity) {
  \Drupal::service('cache_tags.invalidator')
    ->invalidateTags(['earlywarning_list']);
}

/**
 * Implements hook_form_FORM_ID_alter().
 * 
 * Alters view filter form elements.
 *  - early_warnings_mit_ref
 *  - log4j_uebersicht
 */
function hzd_earlywarnings_form_views_exposed_form_alter(array &$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $view = $form_state->getStorage('view');
  if ($view['view']->id() == 'log4j_uebersicht') {
    $releaseType = 459;
    $query = \Drupal::entityQuery('node');
    // Service query.
    $result = $query
      ->condition('type', 'services')
      ->condition('release_type' , $releaseType)
      ->condition('field_release_name', '', '!=')
      ->execute();

    foreach ($result as $element => $nid) {
      $node = Node::load($nid);
      $services[$nid] = $node->title->value;
    }
    asort($services);

    $sortedServices = ['' => '<Verfahren>'];
    foreach ($services as $nid => $title) {
      $sortedServices[$nid] = $title;
    }

    // The service form element.
    $form['field_service'] = [
      '#type' => 'select',
      '#options' => $sortedServices,
      '#attributes' => [
        'placeholder' => '<Verfahren>',
      ],
    ];
  }
  if (($view['view']->id() == 'early_warnings_mit_ref') && ($view['view']->current_display == 'page_1')) {
    $releaseType = \Drupal::request()->query->get('release_type') ?: 459;
    $query = \Drupal::entityQuery('node');
    // Service query.
    $result = $query
      ->condition('type', 'services')
      ->condition('release_type' , $releaseType)
      ->condition('field_release_name', '', '!=')
      ->execute();

    foreach ($result as $element => $nid) {
      $node = Node::load($nid);
      $services[$nid] = $node->title->value;
    }
    asort($services);

    $sortedServices = ['' => '<Verfahren>'];
    foreach ($services as $nid => $title) {
      $sortedServices[$nid] = $title;
    }

    // The service form element.
    $form['services'] = [
      '#type' => 'select',
      '#options' => $sortedServices,
      '#attributes' => [
        'placeholder' => '<Verfahren>',
      ],
    ];

    $selectedService = \Drupal::request()->query->get('services') ?: FALSE;
    if ($selectedService) {
      $query = \Drupal::entityQuery('node');
      // Release query.
      $result = $query
        ->condition('type', 'release')
        ->condition('field_relese_services', $selectedService)
        ->execute();

      $releases = [];
      foreach ($result as $element => $nid) {
        $node = Node::load($nid);
        $releases[$nid] = $node->title->value;
      }
      asort($releases);

      $sortedReleases = ['' => '<Release>'];
      foreach ($releases as $nid => $title) {
        $sortedReleases[$nid] = $title;
      }
    }
    else {
      $sortedReleases = ['' => '<Release>'];
    }
    
    // The release form element.
    $form['releases'] = [
      '#type' => 'select',
      '#options' => $sortedReleases,
      '#disabled' => $selectedService ? FALSE : TRUE,
      '#attributes' => [
        'placeholder' => '<Verfahren>',
      ],
    ];

  }
}

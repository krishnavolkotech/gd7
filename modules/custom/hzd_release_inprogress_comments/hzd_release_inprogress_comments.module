<?php

/**
 * @file
 * Contains hzd_release_inprogress_comments.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\Entity\Node;

/**
 * Implements hook_help().
 */
function hzd_release_inprogress_comments_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the hzd_release_inprogress_comments module.
    case 'help.page.hzd_release_inprogress_comments':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('HZD Release inprogress comments') . '</p>';
      return $output;

    default:
  }
}

/**
 * implements hook_form_alter
 */
function hzd_release_inprogress_comments_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == 'node_release_comments_form') {
    $service = \Drupal::request()->query->get('services');
    $rel = \Drupal::request()->query->get('releases');
    $form['field_service']['widget'][0]['target_id']['#default_value'] = Node::load($service);
    $form['field_release_ref']['widget'][0]['target_id']['#default_value'] = Node::load($rel);
    if ($rel && $service) {
      $form['field_service']['#attributes']['readonly'] = 'readonly';
      $form['field_release_ref']['#attributes']['readonly'] = 'readonly';
      $form['field_service']['#disabled'] = TRUE;
      $form['field_release_ref']['#disabled'] = TRUE;
    }
  }

  return $form;
}

/**
 * @param \Drupal\Core\Entity\EntityInterface $entity
 */
function hzd_release_inprogress_comments_node_insert(\Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->getType() == 'release_comments') {
    $group = \Drupal\group\Entity\Group::load(RELEASE_MANAGEMENT);
    $plugin = $group->getGroupType()
      ->getContentPlugin('group_node:release_comments');

    $values = [
      'type' => $plugin->getContentTypeConfigId(),
      'gid' => $group->id(),
      'entity_id' => $entity->id(),
    ];
    $group_content = \Drupal::entityTypeManager()
      ->getStorage('group_content')
      ->create($values)
      ->save();
  }
}

/**
 * Implements hook_form_alter().
 * 
 * Alters the early_warnings_mit_ref view filter form elements.
 */
function hzd_release_inprogress_comments_form_views_exposed_form_alter(array &$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $view = $form_state->getStorage('view');
  if (($view['view']->id() == 'release_kommentare_ref') && ($view['view']->current_display == 'page_1')) {
    $releaseType = \Drupal::request()->query->get('release_type') ?: 459;
    $query = \Drupal::service('entity.query');
    // Service query.
    $result = $query->get('node')
      ->condition('type', 'services')
      ->condition('release_type' , $releaseType)
      ->condition('field_release_name', '', '!=')
      ->execute();

    foreach ($result as $element => $nid) {
      $node = Node::load($nid);
      $services[$nid] = $node->title->value;
    }
    asort($services);

    $sortedServices = ['' => '<Verfahren>'];
    foreach ($services as $nid => $title) {
      $sortedServices[$nid] = $title;
    }

    // The service form element.
    $form['services'] = [
      '#type' => 'select',
      '#options' => $sortedServices,
      '#attributes' => [
        'placeholder' => '<Verfahren>',
      ],
    ];

    $selectedService = \Drupal::request()->query->get('services') ?: FALSE;
    if ($selectedService) {
      // Release query.
      $result = $query->get('node')
        ->condition('type', 'release')
        ->condition('field_relese_services', $selectedService)
        ->execute();

      $releases = [];
      foreach ($result as $element => $nid) {
        $node = Node::load($nid);
        $releases[$nid] = $node->title->value;
      }
      asort($releases);

      $sortedReleases = ['' => '<Release>'];
      foreach ($releases as $nid => $title) {
        $sortedReleases[$nid] = $title;
      }
    }
    else {
      $sortedReleases = ['' => '<Release>'];
    }
    
    // The release form element.
    $form['releases'] = [
      '#type' => 'select',
      '#options' => $sortedReleases,
      '#disabled' => $selectedService ? FALSE : TRUE,
      '#attributes' => [
        'placeholder' => '<Verfahren>',
      ],
    ];

  }
}
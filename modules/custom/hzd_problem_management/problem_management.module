<?php 

/**
 * implements hook_mail
 */
use Drupal\Component\Utility\SafeMarkup;

function problem_management_mail($key, &$message, $params = array()) {
 // echo '<pre>'; print_r($message); 
 // echo '<pre>'; print_r($params);
 // exit; 

  $options = array(
                   'langcode' => $message['langcode'],
                   );
 // pr($message);exit;
  switch ($key) {
    case 'problem_management_read_csv':
  //  $message['from'] = \Drupal::config('system.site')->get('mail');
    $message['from'] = $message['from'];
    $message['subject'] = $params['subject'];
    //$message['body'][] = $params['message'];
   //  $message['body'][] = SafeMarkup::checkPlain($params['message']);
     $message['body'][] = $params['message'];
    $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
    break;

   case 'release_read_csv':
  //  $message['from'] = \Drupal::config('system.site')->get('mail');
    $message['from'] = $message['from'];
    $message['subject'] = $params['subject'];
    //$message['body'][] = $params['message'];
   //  $message['body'][] = SafeMarkup::checkPlain($params['message']);
     $message['body'][] = $params['message'];
    $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
    break;
  }
}


// Default cron-function, configurable through /admin/config/system/cron

function problem_management_cron() {
  $readExcel = new Drupal\problem_management\Controller\ReadexcelController();
  $readExcel->read_problem_csv();
}

// Define custom cron functions.
/**
function problem_management_cronapi($op, $job = NULL) {
  return array(
    'problem_management_cronjob_2' => array(
      'title' => 'Cron-2 Handler',
      'callback' => 'problem_management_run_importcsv',
      'scheduler' => array(
        'name' => 'crontab',
        'crontab' => array(
          'rules' => array('00 01,13 * * *'),
        ),
      ),
    ),
  );
}

*/
// Custom cron-function
function problem_management_run_importcsv($job) {
/**

  // global $base_url;
  // $currency_value_url =  $base_url . '/currecy_values';
  // $request = Drupal::httpClient()->get($currency_value_url);
  // $request->addHeader('If-Modified-Since', gmdate(DATE_RFC1123, $last_fetched));
  try {
    $currencyvalue =  new CurrencyValuesController();
    // print_r($currencyvalue); exit;
    $currencyvalue->CurrencyValues();
    // $request->send();
    // $response = $request->send();
    // Expected result.
    // $data = $response->getBody(TRUE);
  } catch (RequestException $e) {
    watchdog_exception('grn_custom', $e);
  }
*/
  return $this->redirect('');
  // Do some stuff ...
}




/*
* Get the no of problems for the node
*/
/**
function default_problem_no($nid = NULL) {
  if ($nid) {
    $sno = db_result(db_query("select max(field_s_no_value) from {content_type_problem} where nid = %d", $nid));
    return $sno;
  }
  else {
    $sno = db_result(db_query("select max(field_s_no_value) from {content_type_problem} "));
  }
  if (!$sno) {
    return 1;
  }
  return $sno;
}
 * 
 */
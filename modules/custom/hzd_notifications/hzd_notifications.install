<?php
use Drupal\hzd_notifications\HzdNotificationsHelper;
use Drupal\Core\Database\Database;

/**
 * Implements hook_schema().
 */
function hzd_notifications_schema() {
  $schema['service_notifications'] = array(
    'description' => 'Stores the service immediate notifications',
    'fields' => array(
      'sid' => array(
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'service_id' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'type' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
      ),

      'send_interval' => array(
        'type' => 'int',
      ),

      'uids' => array(
        'type' => 'blob',
        'not null' => TRUE,
      ),

    ),
    'primary key' => array('sid'),
  );

  $schema['planning_files_notifications'] = array(
    'description' => 'Stores the planning files notifications',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'send_interval' => array(
        'type' => 'int',
      ),
      'uids' => array(
        'type' => 'blob',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['quickinfo_notifications'] = array(
    'description' => 'Stores the quickinfo notifications',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'cck' => array(
        'type' => 'varchar_ascii',
        'length' => 255,
        'not null' => TRUE,
      ),
      'send_interval' => array(
        'type' => 'int',
      ),
      'uids' => array(
        'type' => 'blob',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['group_notifications'] = array(
    'description' => 'Stores the Group notifications',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'group_id' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'group_name' => array(
        'type' => 'varchar_ascii',
        'length' => 255,
        'not null' => TRUE,
      ),
      'send_interval' => array(
        'type' => 'int',
      ),
      'uids' => array(
        'type' => 'blob',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['group_notifications_user_default_interval'] = array(
    'description' => 'Stores the Group notifications default interval',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'group_id' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      //group id is sufficient as this doesnt trigger on group update
      /*      'group_name' => array(
              'type' => 'varchar_ascii',
              'length' => 255,
              'not null' => TRUE,
            ),*/
      'default_send_interval' => array(
        'type' => 'int',
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['service_notifications_override'] = array(
    'description' => 'Override service notifications',
    'fields' => array(
      'sid' => array(
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'service_id' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'type' => array(
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 255,
      ),

      'send_interval' => array(
        'type' => 'int',
      ),

      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),

      'rel_type' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),

    ),
    'primary key' => array('sid'),
  );

  $schema['planning_files_notifications_default_interval'] = array(
    'description' => 'Storing internal planning files notifications.',
    'fields' => array(
      'id' => array(
        'description' => 'Storing planning notification id value.',
        'type' => 'serial',
        'not null' => FALSE,
      ),
      'uid' => array(
        'description' => 'Storing NSM user id value.',
        'type' => 'int',
      ),
      'planning_file_type' => array(
        'description' => 'Storing planning type file name.',
        'type' => 'varchar',
        'length' => 100,
      ),
      'default_send_interval' => array(
        'description' => 'Storing default send interval information.',
        'type' => 'int',
      ),
    ),
    'primary key' => array('id'),

  );

  $schema['quickinfo_notifications_user_default_interval'] = array(
    'description' => 'Storing quickinfo notifications.',
    'fields' => array(
      'id' => array(
        'description' => 'Storing quickinfo notifications id value.',
        'type' => 'serial',
      ),
      'uid' => array(
        'description' => 'Storing quickinfo notifications user id value.',
        'type' => 'int',
      ),
      'affected_service' => array(
        'description' => 'Storing quickinfo notifiations effected value.',
        'type' => 'varchar',
        'length' => 50,
      ),
      'default_send_interval' => array(
        'description' => 'Storing quickinfo notifications default send interval value.',
        'type' => 'int',
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['service_notifications_user_default_interval'] = array(
    'description' => 'Storing service notification user values.',
    'fields' => array(
      'id' => array(
        'description' => 'Storing service notification serial value.',
        'type' => 'serial',
        'not null' => FALSE,
        'unsigned' => TRUE,
      ),
      'uid' => array(
        'description' => 'Storing service notification user id value.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'service_type' => array(
        'description' => 'Storing import status value.',
        'type' => 'varchar',
        'length' => 32,
        'default' => '',
        'not null' => TRUE,
      ),
      'default_send_interval' => array(
        'description' => 'Storing default send value.',
        'type' => 'int',
      ),
      'rel_type' => array(
        'description' => 'Storing rel value.',
        'type' => 'int',
      ),
    ),
    'primary key' => array('id'),

  );

  return $schema;
}

function hzd_notifications_update_8008() {
  $query = \Drupal::database()->select('node_field_data', 'n');
  $query->leftJoin('node__field_release_name', 'nfrn', 'n.nid = nfrn.entity_id');
  $query->leftJoin('node__field_problem_name', 'nfpn', 'n.nid = nfpn.entity_id');
  $query->leftJoin('node__field_enable_downtime', 'nfed', 'n.nid = nfed.entity_id');
  $query->leftJoin('node__release_type', 'nrt', 'n.nid = nrt.entity_id');
  $query->condition('n.type', 'services', '=')
    ->fields('n', array('nid'))
    ->fields('nfrn', array('field_release_name_value'))
    ->fields('nfpn', array('field_problem_name_value'))
    ->fields('nrt', array('release_type_target_id'))
    ->fields('nfed', array('field_enable_downtime_value'));
  $result = $query->execute()->fetchAll();
  foreach ($result as $services_info) {
    if ($services_info->field_enable_downtime_value && $services_info->release_type_target_id == 459) {
      insert_service_notifications('downtimes', $services_info->nid);
    }
    if ($services_info->field_problem_name_value && $services_info->release_type_target_id == 459) {
      //$problem_record = array('service_id' => $services_info->nid, 'type' => 'problem', 'send_interval' => 0, 'uids' => 0);
      //\Drupal::database()->insert('service_immediate_notifications')->fields($problem_record)->execute();
      insert_service_notifications('problem', $services_info->nid);
    }
    if ($services_info->field_release_name_value) {
      //$release_record = array('service_id' => $services_info->nid, 'type' => 'release', 'send_interval' => 0, 'uids' => 0);
      //\Drupal::database()->insert('service_immediate_notifications')->fields($release_record)->execute();
      insert_service_notifications('release', $services_info->nid);
    }
    insert_service_notifications('early_warnings', $services_info->nid);
    //$early_warnings_record = array('service_id' => $services_info->nid, 'type' => 'early_warnings', 'send_interval' => 0, 'uids' => 0);
    //\Drupal::database()->insert('service_immediate_notifications')->fields($early_warnings_record)->execute();
  }
}

function insert_service_notifications($type, $nid) {

  $interval = HzdNotificationsHelper::hzd_notification_send_interval();
  foreach ($interval as $vals) {
    $record = array(
      'service_id' => $nid,
      'type' => $type,
      'send_interval' => $vals,
      'uids' => 0
    );
    \Drupal::database()->insert('service_notifications')->fields($record)->execute();
  }
}

/*function hzd_notifications_update_8009() {
  // migrate planning file notifications.
  $interval = array('-1', 0, 86400, 604800);
  foreach($interval as $vals) {
    $record = array('send_interval' => $vals, 'uids' => 0);
	  \Drupal::database()->insert('planning_files_notifications')->fields($record)->execute();
  }
}*/

function hzd_notifications_update_8010() {
  // migrate quickinfo notifications.
  $interval = HzdNotificationsHelper::hzd_notification_send_interval();
  foreach ($interval as $vals) {
    $uids = \Drupal::database()->query("SELECT n.uid FROM {notifications} n, {notifications_fields} nf WHERE n.sid = nf.sid and nf.value = :val AND send_interval = :intval", array(
      ":val" => 'planning_files',
      "intval" => $vals
    ))->fetchCol();
    $serialized_uids = serialize($uids);
    $record = array('send_interval' => $vals, 'uids' => $serialized_uids);
    \Drupal::database()->insert('planning_files_notifications')->fields($record)->execute();
  }
}

// migrate quickinfo notifications
function hzd_notifications_update_8012() {
  $options = \Drupal\field\Entity\FieldStorageConfig::loadByName('node', 'field_other_services')
    ->getSetting('allowed_values');
  $interval = HzdNotificationsHelper::hzd_notification_send_interval();
  foreach ($options as $content_key => $content) {
    foreach ($interval as $vals) {
      $uids = \Drupal::database()->query("SELECT n.uid FROM {notifications} n, {notifications_fields} nf WHERE n.sid = nf.sid and nf.value = :val and n.send_interval = :intval", array(
        ":val" => $content,
        ":intval" => $vals
      ))->fetchCol();
      $serialized_uids = serialize($uids);
      $record = array(
        'cck' => $content,
        'send_interval' => $vals,
        'uids' => $serialized_uids
      );
      \Drupal::database()->insert('quickinfo_notifications')->fields($record)->execute();
    }
  }
}

// update user group notifications default interval
function hzd_notifications_update_8015() {
  $user_ids = \Drupal::database()->query("SELeCT uid FROM users where uid <>0")->fetchCol();
  foreach ($user_ids as $uid) {
    $default_groups_send_interval = array();
    $default_groups_query = \Drupal::database()->query("SELECT DISTINCT value , send_interval FROM {notifications} s, {notifications_fields} nf  WHERE s.sid = nf.sid and  field = :field and uid = :uid", array(
      ":field" => 'group',
      ":uid" => $uid
    ))->fetchAll();
    foreach ($default_groups_query as $default_groups_info) {
      $default_groups_send_interval[$default_groups_info->value] = $default_groups_info->send_interval;
    }

    $user_groups_query = \Drupal::database()->query("SELECT gfd.id, gfd.label FROM {groups_field_data} gfd, {group_content_field_data} gcfd 
                   WHERE gfd.id = gcfd.gid AND gcfd.entity_id = :eid", array(":eid" => $uid))->fetchAll();
    $user_groups = array();
    foreach ($user_groups_query as $groups_list) {
      $user_groups[$groups_list->id] = $groups_list->label;
    }

    if (count($user_groups) > 0) {
      foreach ($user_groups as $gid => $label) {
        // old ref
        $old_ref = \Drupal::database()->query("SELECT field_old_reference_value FROM {group__field_old_reference} 
                   WHERE entity_id = :eid", array(":eid" => $gid))->fetchField();
        if ($old_ref && $default_groups_send_interval[$old_ref]) {
          $int_val = $default_groups_send_interval[$old_ref] ? $default_groups_send_interval[$old_ref] : 0;
          $record = array(
            'uid' => $uid,
            'group_id' => $gid,
            'group_name' => $label,
            'default_send_interval' => $int_val
          );
          \Drupal::database()->insert('group_notifications_user_default_interval')
            ->fields($record)
            ->execute();
        }
      }
    }

  }
}

/**
 * Adds new table notifications_scheduled into database. This stores the
 * entities and user data, for which notifications are to be sent.
 */
function hzd_notifications_update_8016() {
  $database = \Drupal::database();
  $schema = $database->schema();

  $table_name = 'notifications_scheduled';
  $table_schema = [
    'fields' => [
      'sid' => [
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ],
      'entity_id' => [
        'type' => 'int',
        'not null' => TRUE,
      ],
      'entity_type' => [
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 25,
      ],
      'bundle' => [
        'type' => 'varchar',
        'not null' => FALSE,
        'length' => 25,
      ],
      'action' => [
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 25,
      ],
      'user_data' => [
        'type' => 'blob',
        'not null' => TRUE,
      ],
      'subject' => [
        'type' => 'text',
      ],
      'body' => [
        'type' => 'text',
      ],
    ],
    'primary key' => ['sid'],
  ];

  $schema->createTable($table_name, $table_schema);

}

/**
 * Implements hook_update_N() on Module hzd_notifications Update # 8017.
 */
function hzd_notifications_update_8017(&$sandbox) {
  $database = \Drupal::database();
  $schema = $database->schema();

  $table_name = 'arbeitsanleitung_notifications__user_default_interval';
  $table_schema = [
    'fields' => [
      'id' => [
        'description' => 'Storing Group notification serial value.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
      'uid' => [
        'description' => 'Storing Group notification user id value.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
      'default_send_interval' => [
        'description' => 'Storing default send value.',
        'type' => 'int',
      ]
    ],
    'primary key' => ['id'],
  ];
  $schema->createTable($table_name, $table_schema);
  \Drupal::messenger()->addMessage('Module hzd_notifications Update # 8017 () was executed successfully.');
}

/**
 * Implements hook_update_N() on Module hzd_notifications Update # 8018.
 */
function hzd_notifications_update_8018(&$sandbox) {
  $connection = Database::getConnection();
  $migrate_tables = ["migrate_map_59a84a2ae95b9", "migrate_map_59a84a2aeef1a", "migrate_map_59a84a2be9685", "migrate_map_59a84a2c0025d", "migrate_map_59a84a2c0c503", "migrate_map_59a84a2c0c57a", "migrate_map_59a84a2c211cc", "migrate_map_59a84a2c297fa", "migrate_map_59a84a2c29874", "migrate_map_59a84a2c4669a", "migrate_map_59a84a2c497f8", "migrate_map_59a84a2c56ad1", "migrate_map_59a8755d038f2", "migrate_map_59a8755d0a7dd", "migrate_map_59a87561b7e7c", "migrate_map_59a87561c2390", "migrate_map_59a87561c866c", "migrate_map_59a87561c86e1", "migrate_map_59a87561d7ea4", "migrate_map_59a87561dfa72", "migrate_map_59a87561dfb02", "migrate_map_59a8756210dd6", "migrate_map_59a8756292e4a", "migrate_map_59a87562c7301", "migrate_map_59a921ec6720e", "migrate_map_59a921ec6e0ad", "migrate_map_59a921ecd2fe0", "migrate_map_59a921ecd30a8", "migrate_map_59a921ed00133", "migrate_map_59a921ed001f8", "migrate_map_59a921ed24512", "migrate_map_59a921ed36133", "migrate_map_59a921ed4586f", "migrate_map_59a921ed551bd", "migrate_map_59a921ed5f493", "migrate_map_59a921ed6b355", "migrate_message_59a84a2ae95b9", "migrate_message_59a84a2aeef1a", "migrate_message_59a84a2be9685", "migrate_message_59a84a2c0025d", "migrate_message_59a84a2c0c503", "migrate_message_59a84a2c0c57a", "migrate_message_59a84a2c211cc", "migrate_message_59a84a2c297fa", "migrate_message_59a84a2c29874", "migrate_message_59a84a2c4669a", "migrate_message_59a84a2c497f8", "migrate_message_59a84a2c56ad1", "migrate_message_59a8755d038f2", "migrate_message_59a8755d0a7dd", "migrate_message_59a87561b7e7c", "migrate_message_59a87561c2390", "migrate_message_59a87561c866c", "migrate_message_59a87561c86e1", "migrate_message_59a87561d7ea4", "migrate_message_59a87561dfa72", "migrate_message_59a87561dfb02", "migrate_message_59a8756210dd6", "migrate_message_59a8756292e4a", "migrate_message_59a87562c7301", "migrate_message_59a921ec6720e", "migrate_message_59a921ec6e0ad", "migrate_message_59a921ecd2fe0", "migrate_message_59a921ecd30a8", "migrate_message_59a921ed00133", "migrate_message_59a921ed001f8", "migrate_message_59a921ed24512", "migrate_message_59a921ed36133", "migrate_message_59a921ed4586f", "migrate_message_59a921ed551bd", "migrate_message_59a921ed5f493", "migrate_message_59a921ed6b355", "migrate_map_block_content_body_field", "migrate_map_block_content_entity_display", "migrate_map_block_content_entity_form_display", "migrate_map_block_content_type", "migrate_map_changed_timestamp", "migrate_map_contact_category", "migrate_map_cust_profile", "migrate_map_d6_block", "migrate_map_d6_comment", "migrate_map_d6_comment_entity_display", "migrate_map_d6_comment_entity_form_display", "migrate_map_d6_comment_entity_form_display_subject", "migrate_map_d6_comment_field", "migrate_map_d6_comment_field_instance", "migrate_map_d6_comment_type", "migrate_map_d6_contact_settings", "migrate_map_d6_custom_block", "migrate_map_d6_date_formats", "migrate_map_d6_dblog_settings", "migrate_map_d6_field", "migrate_map_d6_field_formatter_settings", "migrate_map_d6_field_group_entity_form_display", "migrate_map_d6_field_group_entity_view_display", "migrate_map_d6_field_instance", "migrate_map_d6_field_instance_widget_settings", "migrate_map_d6_file", "migrate_map_d6_filter_format", "migrate_map_d6_forum_settings", "migrate_map_d6_i18n_system_maintenance", "migrate_map_d6_i18n_system_site", "migrate_map_d6_i18n_user_mail", "migrate_map_d6_i18n_user_profile_field_instance", "migrate_map_d6_i18n_user_settings", "migrate_map_d6_language_content_settings", "migrate_map_d6_language_negotiation_settings", "migrate_map_d6_language_types", "migrate_map_d6_menu", "migrate_map_d6_menu_links", "migrate_map_d6_node__book", "migrate_map_d6_node__deployed_releases", "migrate_map_d6_node__downtimes", "migrate_map_d6_node__early_warnings", "migrate_map_d6_node__event", "migrate_map_d6_node__faq", "migrate_map_d6_node__faqs", "migrate_map_d6_node__forum", "migrate_map_d6_node__group", "migrate_map_d6_node__grouppost", "migrate_map_d6_node__im_upload_page", "migrate_map_d6_node__newsletter", "migrate_map_d6_node__non_production_environment", "migrate_map_d6_node__page", "migrate_map_d6_node__planning_files", "migrate_map_d6_node__problem", "migrate_map_d6_node__quickinfo", "migrate_map_d6_node__release", "migrate_map_d6_node__service_profile", "migrate_map_d6_node__services", "migrate_map_d6_node__story", "migrate_map_d6_node_revision__book", "migrate_map_d6_node_revision__deployed_releases", "migrate_map_d6_node_revision__downtimes", "migrate_map_d6_node_revision__early_warnings", "migrate_map_d6_node_revision__event", "migrate_map_d6_node_revision__faq", "migrate_map_d6_node_revision__faqs", "migrate_map_d6_node_revision__forum", "migrate_map_d6_node_revision__group", "migrate_map_d6_node_revision__grouppost", "migrate_map_d6_node_revision__im_upload_page", "migrate_map_d6_node_revision__newsletter", "migrate_map_d6_node_revision__non_production_environment", "migrate_map_d6_node_revision__page", "migrate_map_d6_node_revision__planning_files", "migrate_map_d6_node_revision__problem", "migrate_map_d6_node_revision__quickinfo", "migrate_map_d6_node_revision__release", "migrate_map_d6_node_revision__service_profile", "migrate_map_d6_node_revision__services", "migrate_map_d6_node_revision__story", "migrate_map_d6_node_setting_promote", "migrate_map_d6_node_setting_status", "migrate_map_d6_node_setting_sticky", "migrate_map_d6_node_settings", "migrate_map_d6_node_translation__book", "migrate_map_d6_node_translation__deployed_releases", "migrate_map_d6_node_translation__downtimes", "migrate_map_d6_node_translation__early_warnings", "migrate_map_d6_node_translation__event", "migrate_map_d6_node_translation__faq", "migrate_map_d6_node_translation__faqs", "migrate_map_d6_node_translation__forum", "migrate_map_d6_node_translation__group", "migrate_map_d6_node_translation__grouppost", "migrate_map_d6_node_translation__im_upload_page", "migrate_map_d6_node_translation__newsletter", "migrate_map_d6_node_translation__non_production_environment", "migrate_map_d6_node_translation__page", "migrate_map_d6_node_translation__planning_files", "migrate_map_d6_node_translation__problem", "migrate_map_d6_node_translation__quickinfo", "migrate_map_d6_node_translation__release", "migrate_map_d6_node_translation__service_profile", "migrate_map_d6_node_translation__services", "migrate_map_d6_node_translation__story", "migrate_map_d6_node_type", "migrate_map_d6_profile_values", "migrate_map_d6_search_settings", "migrate_map_d6_system_cron", "migrate_map_d6_system_date", "migrate_map_d6_system_file", "migrate_map_d6_system_performance", "migrate_map_d6_taxonomy_term", "migrate_map_d6_taxonomy_term_translation", "migrate_map_d6_taxonomy_vocabulary", "migrate_map_d6_taxonomy_vocabulary_translation", "migrate_map_d6_term_node__2", "migrate_map_d6_term_node__3", "migrate_map_d6_term_node__4", "migrate_map_d6_term_node__5", "migrate_map_d6_term_node__8", "migrate_map_d6_term_node_revision__2", "migrate_map_d6_term_node_revision__3", "migrate_map_d6_term_node_revision__4", "migrate_map_d6_term_node_revision__5", "migrate_map_d6_term_node_revision__8", "migrate_map_d6_upload", "migrate_map_d6_upload_entity_display", "migrate_map_d6_upload_entity_form_display", "migrate_map_d6_upload_field", "migrate_map_d6_upload_field_instance", "migrate_map_d6_url_alias", "migrate_map_d6_user", "migrate_map_d6_user_contact_settings", "migrate_map_d6_user_mail", "migrate_map_d6_user_picture_file", "migrate_map_d6_user_role", "migrate_map_d6_user_settings", "migrate_map_d6_view_modes", "migrate_map_d6_vocabulary_entity_display", "migrate_map_d6_vocabulary_entity_form_display", "migrate_map_d6_vocabulary_field", "migrate_map_d6_vocabulary_field_instance", "migrate_map_default_language", "migrate_map_default_release_type", "migrate_map_downtime_log_downtimes_logs", "migrate_map_downtimes_states_downtimes", "migrate_map_field_date_deployed", "migrate_map_field_dependent_downtimeservices", "migrate_map_field_dependent_service", "migrate_map_field_relese_services", "migrate_map_field_services", "migrate_map_fields_faq_terms", "migrate_map_fields_forums", "migrate_map_file_settings", "migrate_map_group_content", "migrate_map_group_downtimes_view", "migrate_map_group_forums", "migrate_map_group_members", "migrate_map_group_notifications_user_default_interval", "migrate_map_group_problems_view", "migrate_map_group_releases_view", "migrate_map_groups", "migrate_map_inactive_user_flag", "migrate_map_language", "migrate_map_language_prefixes_and_domains", "migrate_map_locale_settings", "migrate_map_maintenance_reason", "migrate_map_menu_settings", "migrate_map_nsm_role", "migrate_map_nsm_user", "migrate_map_nsm_user_role", "migrate_map_planning_files_notifications_default_interval", "migrate_map_problem_import_history", "migrate_map_quickinfo_notifications_user_default_interval", "migrate_map_release_doc_failed_download_info", "migrate_map_resolve_incident_resolve_cancel_incident", "migrate_map_search_page", "migrate_map_service_downtimes_downtimes", "migrate_map_service_notifications_priority", "migrate_map_service_notifications_user_default_interval", "migrate_map_service_release_type", "migrate_map_state_downtimes_downtimes", "migrate_map_states", "migrate_map_statistics_settings", "migrate_map_system_image", "migrate_map_system_image_gd", "migrate_map_system_logging", "migrate_map_system_maintenance", "migrate_map_system_rss", "migrate_map_system_site", "migrate_map_taxonomy_settings", "migrate_map_text_settings", "migrate_map_update_settings", "migrate_map_user_picture_entity_display", "migrate_map_user_picture_entity_form_display", "migrate_map_user_picture_field", "migrate_map_user_picture_field_instance", "migrate_map_user_profile_entity_display", "migrate_map_user_profile_entity_form_display", "migrate_map_user_profile_field", "migrate_map_user_profile_field_instance", "migrate_message_block_content_body_field", "migrate_message_block_content_entity_display", "migrate_message_block_content_entity_form_display", "migrate_message_block_content_type", "migrate_message_changed_timestamp", "migrate_message_contact_category", "migrate_message_cust_profile", "migrate_message_d6_block", "migrate_message_d6_comment", "migrate_message_d6_comment_entity_display", "migrate_message_d6_comment_entity_form_display", "migrate_message_d6_comment_entity_form_display_subject", "migrate_message_d6_comment_field", "migrate_message_d6_comment_field_instance", "migrate_message_d6_comment_type", "migrate_message_d6_contact_settings", "migrate_message_d6_custom_block", "migrate_message_d6_date_formats", "migrate_message_d6_dblog_settings", "migrate_message_d6_field", "migrate_message_d6_field_formatter_settings", "migrate_message_d6_field_group_entity_form_display", "migrate_message_d6_field_group_entity_view_display", "migrate_message_d6_field_instance", "migrate_message_d6_field_instance_widget_settings", "migrate_message_d6_file", "migrate_message_d6_filter_format", "migrate_message_d6_forum_settings", "migrate_message_d6_i18n_system_maintenance", "migrate_message_d6_i18n_system_site", "migrate_message_d6_i18n_user_mail", "migrate_message_d6_i18n_user_profile_field_instance", "migrate_message_d6_i18n_user_settings", "migrate_message_d6_language_content_settings", "migrate_message_d6_language_negotiation_settings", "migrate_message_d6_language_types", "migrate_message_d6_menu", "migrate_message_d6_menu_links", "migrate_message_d6_node__book", "migrate_message_d6_node__deployed_releases", "migrate_message_d6_node__downtimes", "migrate_message_d6_node__early_warnings", "migrate_message_d6_node__event", "migrate_message_d6_node__faq", "migrate_message_d6_node__faqs", "migrate_message_d6_node__forum", "migrate_message_d6_node__group", "migrate_message_d6_node__grouppost", "migrate_message_d6_node__im_upload_page", "migrate_message_d6_node__newsletter", "migrate_message_d6_node__non_production_environment", "migrate_message_d6_node__page", "migrate_message_d6_node__planning_files", "migrate_message_d6_node__problem", "migrate_message_d6_node__quickinfo", "migrate_message_d6_node__release", "migrate_message_d6_node__service_profile", "migrate_message_d6_node__services", "migrate_message_d6_node__story", "migrate_message_d6_node_revision__book", "migrate_message_d6_node_revision__deployed_releases", "migrate_message_d6_node_revision__downtimes", "migrate_message_d6_node_revision__early_warnings", "migrate_message_d6_node_revision__event", "migrate_message_d6_node_revision__faq", "migrate_message_d6_node_revision__faqs", "migrate_message_d6_node_revision__forum", "migrate_message_d6_node_revision__group", "migrate_message_d6_node_revision__grouppost", "migrate_message_d6_node_revision__im_upload_page", "migrate_message_d6_node_revision__newsletter", "migrate_message_d6_node_revision__non_production_environment", "migrate_message_d6_node_revision__page", "migrate_message_d6_node_revision__planning_files", "migrate_message_d6_node_revision__problem", "migrate_message_d6_node_revision__quickinfo", "migrate_message_d6_node_revision__release", "migrate_message_d6_node_revision__service_profile", "migrate_message_d6_node_revision__services", "migrate_message_d6_node_revision__story", "migrate_message_d6_node_setting_promote", "migrate_message_d6_node_setting_status", "migrate_message_d6_node_setting_sticky", "migrate_message_d6_node_settings", "migrate_message_d6_node_translation__book", "migrate_message_d6_node_translation__deployed_releases", "migrate_message_d6_node_translation__downtimes", "migrate_message_d6_node_translation__early_warnings", "migrate_message_d6_node_translation__event", "migrate_message_d6_node_translation__faq", "migrate_message_d6_node_translation__faqs", "migrate_message_d6_node_translation__forum", "migrate_message_d6_node_translation__group", "migrate_message_d6_node_translation__grouppost", "migrate_message_d6_node_translation__im_upload_page", "migrate_message_d6_node_translation__newsletter", "migrate_message_d6_node_translation__non_production_environment", "migrate_message_d6_node_translation__page", "migrate_message_d6_node_translation__planning_files", "migrate_message_d6_node_translation__problem", "migrate_message_d6_node_translation__quickinfo", "migrate_message_d6_node_translation__release", "migrate_message_d6_node_translation__service_profile", "migrate_message_d6_node_translation__services", "migrate_message_d6_node_translation__story", "migrate_message_d6_node_type", "migrate_message_d6_profile_values", "migrate_message_d6_search_settings", "migrate_message_d6_system_cron", "migrate_message_d6_system_date", "migrate_message_d6_system_file", "migrate_message_d6_system_performance", "migrate_message_d6_taxonomy_term", "migrate_message_d6_taxonomy_term_translation", "migrate_message_d6_taxonomy_vocabulary", "migrate_message_d6_taxonomy_vocabulary_translation", "migrate_message_d6_term_node__2", "migrate_message_d6_term_node__3", "migrate_message_d6_term_node__4", "migrate_message_d6_term_node__5", "migrate_message_d6_term_node__8", "migrate_message_d6_term_node_revision__2", "migrate_message_d6_term_node_revision__3", "migrate_message_d6_term_node_revision__4", "migrate_message_d6_term_node_revision__5", "migrate_message_d6_term_node_revision__8", "migrate_message_d6_upload", "migrate_message_d6_upload_entity_display", "migrate_message_d6_upload_entity_form_display", "migrate_message_d6_upload_field", "migrate_message_d6_upload_field_instance", "migrate_message_d6_url_alias", "migrate_message_d6_user", "migrate_message_d6_user_contact_settings", "migrate_message_d6_user_mail", "migrate_message_d6_user_picture_file", "migrate_message_d6_user_role", "migrate_message_d6_user_settings", "migrate_message_d6_view_modes", "migrate_message_d6_vocabulary_entity_display", "migrate_message_d6_vocabulary_entity_form_display", "migrate_message_d6_vocabulary_field", "migrate_message_d6_vocabulary_field_instance", "migrate_message_default_language", "migrate_message_default_release_type", "migrate_message_downtime_log_downtimes_logs", "migrate_message_downtimes_states_downtimes", "migrate_message_field_date_deployed", "migrate_message_field_dependent_downtimeservices", "migrate_message_field_dependent_service", "migrate_message_field_relese_services", "migrate_message_field_services", "migrate_message_fields_faq_terms", "migrate_message_fields_forums", "migrate_message_file_settings", "migrate_message_group_content", "migrate_message_group_downtimes_view", "migrate_message_group_forums", "migrate_message_group_members", "migrate_message_group_notifications_user_default_interval", "migrate_message_group_problems_view", "migrate_message_group_releases_view", "migrate_message_groups", "migrate_message_inactive_user_flag", "migrate_message_language", "migrate_message_language_prefixes_and_domains", "migrate_message_locale_settings", "migrate_message_maintenance_reason", "migrate_message_menu_settings", "migrate_message_nsm_role", "migrate_message_nsm_user", "migrate_message_nsm_user_role", "migrate_message_planning_files_notifications_default_interval", "migrate_message_problem_import_history", "migrate_message_quickinfo_notifications_user_default_interval", "migrate_message_release_doc_failed_download_info", "migrate_message_resolve_incident_resolve_cancel_incident", "migrate_message_search_page", "migrate_message_service_downtimes_downtimes", "migrate_message_service_notifications_priority", "migrate_message_service_notifications_user_default_interval", "migrate_message_service_release_type", "migrate_message_state_downtimes_downtimes", "migrate_message_states", "migrate_message_statistics_settings", "migrate_message_system_image", "migrate_message_system_image_gd", "migrate_message_system_logging", "migrate_message_system_maintenance", "migrate_message_system_rss", "migrate_message_system_site", "migrate_message_taxonomy_settings", "migrate_message_text_settings", "migrate_message_update_settings", "migrate_message_user_picture_entity_display", "migrate_message_user_picture_entity_form_display", "migrate_message_user_picture_field", "migrate_message_user_picture_field_instance", "migrate_message_user_profile_entity_display", "migrate_message_user_profile_entity_form_display", "migrate_message_user_profile_field", "migrate_message_user_profile_field_instance"];
  foreach ($migrate_tables as $mig_table) {
    $connection->schema()->dropTable($mig_table);
  }
  \Drupal::messenger()->addMessage('Migration tables deleted successfully.');
}

/**
 * Implements hook_update_N() on Module hzd_notifications Update # 8019.
 */
function hzd_notifications_update_8019(&$sandbox) {
  $database = \Drupal::database();
  $schema = $database->schema();

  $table_name = 'sams_notifications__user_default_interval';
  $table_schema = [
    'description' => 'Stores the Sams notifications default interval',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'service' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'class' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'product' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'status' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  ];
  $schema->createTable($table_name, $table_schema);
  \Drupal::messenger()->addMessage('Module hzd_notifications Update # 8019 () was executed successfully.');
}

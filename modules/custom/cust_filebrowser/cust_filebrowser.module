<?php

/**
 * @file
 * Contains Drupal\cust_filebrowser\cust_filebrowser.module
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\node\NodeInterface;

/**
 * Add class "cust-filebrowser-actions" to fix margin between buttons.
 *
 * Implements hook_ENTITY_TYPE_view_alter()
 */
function cust_filebrowser_node_view_alter(array &$build, NodeInterface $node, EntityViewDisplayInterface $display) {
  $view_mode = $display->getOriginalMode();
  if ($view_mode == 'full' && $node->bundle() == 'dir_listing') {
    $fid = \Drupal::request()->query->get('fid');
    $database = \Drupal::database();
    $result = $database->query("SELECT path FROM filebrowser_content WHERE fid=:fid", [":fid" => $fid])
      ->fetchAssoc();
    $tableFilter = [
      '#type' => 'textfield',
      // "#placeholder" => "Tabelle filtern...",
      "#placeholder" => "Im aktuellen Ordner suchen...",
      '#size' => 60,
      '#maxlength' => 128,
      '#required' => FALSE,
      '#id' => "search-files",
    ];

    // Build markup for folder breadcrumbs.
    $explodedPath = explode("/", $result['path']);
    $currentFolder = '<span class="current-folder">' . array_pop($explodedPath) . '</span>';
    $explodedPath[] = $currentFolder;
    $folderPathMarkup = '<p class="folder-path">';
    array_shift($explodedPath);
    $folderPathMarkup .= array_shift($explodedPath);
    foreach ($explodedPath as $folder) {
      $folderPathMarkup .= '  ›  ' . $folder;
    }
    $folderPathMarkup .= '</p>';
    $folderPath = [
      '#markup' => $folderPathMarkup,
    ];

    // Build markup for the "go up" link.
    $firstOption = reset($build['filebrowser_file_list']['table']['#options'])['name']->__toString();
    $goUp = [];
    if (str_contains($firstOption, "Zurück</a>")) {
      $goUp = [
        '#markup' => $firstOption,
      ];
      // $key = key($build['filebrowser_file_list']['table']['#options']);
      // unset($build['filebrowser_file_list']['table']['#options'][$key]);
    }
    // Insert new elements at the right place in $build render array.
    $prevArray = $build['filebrowser_file_list'];
    $result = array_slice($prevArray, 0, 3, true) +
      $folderPath +
      array_slice($prevArray, 3, 1, true) +
      ["table_filter" => $tableFilter] +
      ["go_up" => $goUp] +
      array_slice($prevArray, 4, count($prevArray) - 1, true
    );

    $build['filebrowser_file_list'] = $result;
    $build['filebrowser_file_list']['action']['#attributes']['class'][] = 'cust-filebrowser-actions';
  }
}

/**
 * Attaches the action_unblocker library to the page.
 * 
 * Enables the filebrowser action-buttons. Prevents action buttons from being 
 * clicked, before the page is fully loaded.
 * 
 * Implements hook_ENTITY_TYPE_view().
 */
function cust_filebrowser_node_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
  if ($view_mode == 'full' && $entity->bundle() == 'dir_listing') {
    $build['#attached']['library'][] = 'cust_filebrowser/action_unblocker'; //????
  }
}

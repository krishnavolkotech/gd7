<?php

/**
 * @file
 * Add group current menu entries in the Drupal Toolbar.
 */
use Drupal\cust_group\Controller\CustNodeController;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function custom_toolbar_menu_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.custom_toolbar_menu':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Add your favorite group custom menu in the Drupal Toolbar');
      $output .= '</ul>';
      return $output;
  }
}

/**
 * Implements hook_page_top().
 *
 * Add a new cache tag for the toolbar cache.
 */
function custom_toolbar_menu_page_top(array &$page_top) {
  $page_top['toolbar']['#cache']['tags'][] = 'custom_toolbar_menu';
}

/**
 * Implements hook_toolbar().
 */
function custom_toolbar_menu_toolbar() {
  $items = [];

  $group = \Drupal::routeMatch()->getParameter('group');

  if(!$group) {
    return $items;
  }
  
  if (is_object($group)) {
    $groupId = $group->id();
    $groupName = $group->label();
  }
  else {
    $groupId = $group;
    $group = \Drupal\group\Entity\Group::load($groupId);
    $groupName = $group->label();
  }

  $items['toolbar_menu_' . $groupId] = array(
    '#type' => 'toolbar_item',
    'tab' => array(
      '#type' => 'link',
      '#title' => $groupName,
      '#url' => Url::fromRoute('<front>'),
      '#attributes' => array(
        'title' => $groupId,
        'class' => array(
          'toolbar-icon',
          'toolbar-icon-toolbar-menu',
          'toolbar-icon-toolbar-menu-' . $groupId,
        ),
        'data-drupal-subtrees' => '',
      ),
    ),
    'tray' => array(
      '#heading' => t('@menu_label actions', ['@menu_label' => $groupId]),
      'toolbar_menu_' . $groupId . '_links' => array(
        '#type' => 'container',
        '#id' => $groupName,
        '#pre_render' => ['custom_toolbar_menu_prerender_toolbar_tray'],
        '#attributes' => array(
          'class' => array('toolbar-menu-administration'),
        ),
      ),
    ),
    '#weight' => 0,
    '#attached' => array(
      'library' => array(
        'toolbar_menu/icons',
      ),
    ),
    '#cache' => ['max-age' => 0]
  );

  return $items;
}

/**
 * Pre-render the toolbar_menu tray element.
 *
 * @param array $element
 *   The tray element to pre-render.
 *
 * @return array
 *   The pre-rendered tray element.
 */
function custom_toolbar_menu_prerender_toolbar_tray(array $element) {
  $group = \Drupal::routeMatch()->getParameter('group');

  if (is_object($group)) {
    $groupId = $group->id();
  }
  else {
    $groupId = $group;
  }

  if (CustNodeController::isGroupAdmin($groupId)) {
    $menuItems[] = \Drupal\Core\Link::createFromRoute(t('Inhaltsübersicht'), 'view.group_nodes.page_1', ['group' => $groupId]);
    $menuItems[] = \Drupal\Core\Link::createFromRoute(t('Inhalt erstellen'), 'cust_group.group_node_create', ['group' => $groupId]);
    $menuItems[] = \Drupal\Core\Link::createFromRoute(t('Benutzer'), 'view.hzd_group_members.approved', ['group' => $groupId]);
    $menuItems[] = \Drupal\Core\Link::createFromRoute(t('Störungen und Blockzeiten'), 'downtimes.DowntimessettingForm', ['group' => $groupId]);
    $menuItems[] = \Drupal\Core\Link::createFromRoute(t('Bekannte Fehler und Probleme'), 'problem_management.problem_settings', ['group' => $groupId]);
    $menuItems[] = \Drupal\Core\Link::createFromRoute(t('Releases'), 'hzd_release_management.release_settings', ['group' => $groupId]);
    $menuItems[] = \Drupal\Core\Link::createFromRoute(t('Mass Contact'), 'mass_contact.bulk_mail_group_members_form');
    if ($groupId == RELEASE_MANAGEMENT) {
      $menuItems[] = \Drupal\Core\Link::createFromRoute(t('Planungsdateien'), 'hzd_release_management.display_planning_files', ['group' => $groupId]);
    }

    $menuHtml = [
      '#items' => $menuItems,
      '#theme' => 'item_list',
      '#list_type' => 'ul',
      '#attributes' => ['class' => ['menu nav']],
      '#cache' => ['max-age' => 0]
    ];
  }
  else {
    $menuHtml = [
      '#markup' => '',
      '#title' => '',
      '#cache' => ['max-age' => 0]
    ];
  }
  $element['toolbar_menu_' . $element['#id']] = $menuHtml; //$menu_tree->build($tree);

  return $element;
}

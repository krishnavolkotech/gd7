diff --git a/group.install b/group.install
index 291ee4b..631d54f 100644
--- a/group.install
+++ b/group.install
@@ -172,3 +172,21 @@ function group_update_8002() {
     $database->insert($data_table)->from($data_query)->execute();
   }
 }
+
+/**
+ * Add a request_status column to the group_content_field_data table.
+ */
+function group_update_8003() {
+  $database = \Drupal::database();
+  $schema = $database->schema();
+
+  $spec = array(
+    'description' => 'Request status code.',
+    'type' => 'int',
+    'size' => 'small',
+    'unsigned' => TRUE,
+    'not null' => TRUE,
+    'default' => 1,
+  );
+  $schema->addField('group_content_field_data', 'request_status', $spec);
+}
\ No newline at end of file
diff --git a/group.links.task.yml b/group.links.task.yml
index 6c02c80..87e8b6d 100644
--- a/group.links.task.yml
+++ b/group.links.task.yml
@@ -35,6 +35,12 @@ group.members:
   route_name: 'entity.group_content.group_membership.collection'
   weight: 15
 
+group.pending_members:
+  title: 'Pending Members'
+  base_route: 'entity.group.canonical'
+  route_name: 'entity.group_content.group_membership.pending_collection'
+  weight: 15
+
 group_type.edit_form:
   title: 'Edit'
   base_route: 'entity.group_type.edit_form'
@@ -63,4 +69,4 @@ group_content_type.edit_form:
   base_route: 'entity.group_content_type.edit_form'
   route_name: 'entity.group_content_type.edit_form'
 
-#todo look into group_role tasks?
\ No newline at end of file
+#todo look into group_role tasks?
diff --git a/group.module b/group.module
index 260464c..3bcb367 100644
--- a/group.module
+++ b/group.module
@@ -16,6 +16,7 @@ use Drupal\Core\Field\FieldDefinitionInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\Access\AccessResult;
+use Drupal\Component\Utility\SafeMarkup;
 
 /**
  * Implements hook_help().
@@ -317,6 +318,23 @@ function group_entity_field_access($operation, FieldDefinitionInterface $field_d
 }
 
 /**
+ * implements hook_mail
+ */
+function group_mail($key, &$message, $params) {
+  $options = array(
+    'langcode' => $message['langcode'],
+  );
+  switch ($key) {
+    case 'immediate_notifications':
+      $message['from'] = \Drupal::config('system.site')->get('mail');
+      $message['subject'] = $params['subject'];
+      $message['body'][] = SafeMarkup::checkPlain($params['message']);
+      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
+      break;
+  }
+}
+
+/**
  * @defgroup group_access Group access rights
  * @{
  * The group access system determines who can do what in which groups.
@@ -346,4 +364,4 @@ function group_entity_field_access($operation, FieldDefinitionInterface $field_d
 
 /**
  * @} End of "defgroup group_access".
- */
+ */
\ No newline at end of file
diff --git a/src/Controller/GroupMembershipController.php b/src/Controller/GroupMembershipController.php
index 9ce6c3a..e3b86da 100644
--- a/src/Controller/GroupMembershipController.php
+++ b/src/Controller/GroupMembershipController.php
@@ -65,6 +65,7 @@ class GroupMembershipController extends ControllerBase {
       'type' => $plugin->getContentTypeConfigId(),
       'gid' => $group->id(),
       'entity_id' => $this->currentUser->id(),
+      'request_status' => 1,
     ]);
 
     return $this->entityFormBuilder()->getForm($group_content, 'group-join');
@@ -84,6 +85,70 @@ class GroupMembershipController extends ControllerBase {
   }
 
   /**
+   * Provides the Request membership form for joining a group.
+   *
+   * @param \Drupal\group\Entity\GroupInterface $group
+   *   The group to join.
+   *
+   * @return array
+   *   A group join form.
+   */
+  public function requestMembership(GroupInterface $group) {
+    /** @var \Drupal\group\Plugin\GroupContentEnablerInterface $plugin */
+    $plugin = $group->getGroupType()->getContentPlugin('group_membership');
+
+    // Pre-populate a group membership with the current user.
+    $group_content = GroupContent::create([
+      'type' => $plugin->getContentTypeConfigId(),
+      'gid' => $group->id(),
+      'entity_id' => $this->currentUser->id(),
+      'request_status' => 0,
+    ]);
+
+    return $this->entityFormBuilder()->getForm($group_content, 'group-request');
+  }
+
+  /**
+   * The _title_callback for the request membership form route.
+   *
+   * @param \Drupal\group\Entity\GroupInterface $group
+   *   The group to join.
+   *
+   * @return string
+   *   The page title.
+   */
+  public function requestMembershipTitle(GroupInterface $group) {
+    return $this->t('Request membership group %label', ['%label' => $group->label()]);
+  }
+
+  /**
+   * The _title_callback for the request membership form route.
+   *
+   * @param \Drupal\group\Entity\GroupInterface $group
+   *   The group to join.
+   *
+   * @return string
+   *   The page title.
+   */
+  public function cancelMembershipTitle(GroupInterface $group) {
+    return $this->t('Cancel membership request for group %label', ['%label' => $group->label()]);
+  }
+
+  /**
+   * Provides the form cancel membership for a group.
+   *
+   * @param \Drupal\group\Entity\GroupInterface $group
+   *   The group to leave.
+   *
+   * @return array
+   *   A group leave form.
+   */
+  public function cancelMembership(GroupInterface $group) {
+    $group_content = $group->getMember($this->currentUser)->getGroupContent();
+    return $this->entityFormBuilder()->getForm($group_content, 'group-cancel');
+  }
+
+  /**
    * Provides the form for leaving a group.
    *
    * @param \Drupal\group\Entity\GroupInterface $group
diff --git a/src/Entity/Controller/GroupContentListBuilder.php b/src/Entity/Controller/GroupContentListBuilder.php
index 0f9812f..4bf1684 100644
--- a/src/Entity/Controller/GroupContentListBuilder.php
+++ b/src/Entity/Controller/GroupContentListBuilder.php
@@ -91,6 +91,13 @@ class GroupContentListBuilder extends EntityListBuilder {
     $query = $this->getStorage()->getQuery();
     $query->sort($this->entityType->getKey('id'));
     $query->condition('gid', $this->group->id());
+    $current_path = explode('/', \Drupal::service('path.current')->getPath());
+    if ($current_path[3] == 'pending-members') {
+      $query->condition('request_status', 0, '=');
+    }
+    else {
+      $query->condition('request_status', 1, '=');
+    }
 
     // Filter on bundles if they were specified by the constructor.
     if (!empty($this->bundles)) {
@@ -139,13 +146,34 @@ class GroupContentListBuilder extends EntityListBuilder {
    * {@inheritdoc}
    */
   protected function getDefaultOperations(EntityInterface $entity) {
-    $operations = parent::getDefaultOperations($entity);
+    $operations = array();
+    $current_path = explode('/', \Drupal::service('path.current')->getPath());
+    if ($current_path[3] == 'pending-members') {
+      if ($entity->access('update') && $entity->hasLinkTemplate('edit-form')) {
+        $operations['approve'] = array(
+          'title' => $this->t('Approve'),
+          'weight' => 10,
+          'url' => $entity->urlInfo('approve-form'),
+        );
+      }
+      if ($entity->access('delete') && $entity->hasLinkTemplate('delete-form')) {
+        $operations['reject'] = array(
+          'title' => $this->t('Reject'),
+          'weight' => 100,
+          'url' => $entity->urlInfo('reject-form'),
+        );
+      }
+    }
+    else {
+      $operations = parent::getDefaultOperations($entity);
+    }
+
 
     $destination = $this->redirectDestination->getAsArray();
     foreach ($operations as $key => $operation) {
       $operations[$key]['query'] = $destination;
     }
-    
+
     return $operations;
   }
 
diff --git a/src/Entity/Form/GroupContentApproveForm.php b/src/Entity/Form/GroupContentApproveForm.php
new file mode 100644
index 0000000..de32640
--- /dev/null
+++ b/src/Entity/Form/GroupContentApproveForm.php
@@ -0,0 +1,69 @@
+<?php
+
+/**
+ * @file
+ * Contains \Drupal\group\Entity\Form\GroupContentApproveForm.
+ */
+
+namespace Drupal\group\Entity\Form;
+
+use Drupal\Core\Entity\ContentEntityConfirmFormBase;
+use Drupal\Core\Form\FormStateInterface;
+use Drupal\Core\Url;
+
+/**
+ * Provides a form for deleting a group content entity.
+ */
+class GroupContentApproveForm extends ContentEntityConfirmFormBase {
+
+  /**
+   * Returns the plugin responsible for this piece of group content.
+   *
+   * @return \Drupal\group\Plugin\GroupContentEnablerInterface
+   *   The responsible group content enabler plugin.
+   */
+  protected function getContentPlugin() {
+    /** @var \Drupal\group\Entity\GroupContent $group_content */
+    $group_content = $this->getEntity();
+    return $group_content->getContentPlugin();
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function getQuestion() {
+    return $this->t('Are you sure you want to approve %name?', ['%name' => $this->entity->label()]);
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function getCancelURL() {
+    // @todo Read a redirect from the plugin?
+    return new Url('entity.group.pending_collection');
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function getConfirmText() {
+    return $this->t('Approve');
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function submitForm(array &$form, FormStateInterface $form_state) {
+    $entity = $this->getEntity();
+    $entity->request_status = 1;
+    $entity->save();
+
+    \Drupal::logger('group_content')->notice('@type: approved %title.', [
+      '@type' => $this->entity->bundle(),
+      '%title' => $this->entity->label(),
+    ]);
+    // @todo Read a redirect from the plugin?
+    $form_state->setRedirect('entity.group.collection');
+  }
+
+}
diff --git a/src/Entity/Form/GroupContentRejectForm.php b/src/Entity/Form/GroupContentRejectForm.php
new file mode 100644
index 0000000..91154b8
--- /dev/null
+++ b/src/Entity/Form/GroupContentRejectForm.php
@@ -0,0 +1,68 @@
+<?php
+
+/**
+ * @file
+ * Contains \Drupal\group\Entity\Form\GroupContentRejectForm.
+ */
+
+namespace Drupal\group\Entity\Form;
+
+use Drupal\Core\Entity\ContentEntityConfirmFormBase;
+use Drupal\Core\Form\FormStateInterface;
+use Drupal\Core\Url;
+
+/**
+ * Provides a form for deleting a group content entity.
+ */
+class GroupContentRejectForm extends ContentEntityConfirmFormBase {
+
+  /**
+   * Returns the plugin responsible for this piece of group content.
+   *
+   * @return \Drupal\group\Plugin\GroupContentEnablerInterface
+   *   The responsible group content enabler plugin.
+   */
+  protected function getContentPlugin() {
+    /** @var \Drupal\group\Entity\GroupContent $group_content */
+    $group_content = $this->getEntity();
+    return $group_content->getContentPlugin();
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function getQuestion() {
+    return $this->t('Are you sure you want to reject %name?', ['%name' => $this->entity->label()]);
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function getCancelURL() {
+    // @todo Read a redirect from the plugin?
+    return new Url('entity.group.pending_collection');
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function getConfirmText() {
+    return $this->t('Reject');
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function submitForm(array &$form, FormStateInterface $form_state) {
+    $entity = $this->getEntity();
+    $entity->delete();
+
+    \Drupal::logger('group_content')->notice('@type: rejected %title.', [
+      '@type' => $this->entity->bundle(),
+      '%title' => $this->entity->label(),
+    ]);
+    // @todo Read a redirect from the plugin?
+    $form_state->setRedirect('entity.group.collection');
+  }
+
+}
diff --git a/src/Entity/Group.php b/src/Entity/Group.php
index 5540f7e..8801427 100644
--- a/src/Entity/Group.php
+++ b/src/Entity/Group.php
@@ -177,6 +177,7 @@ class Group extends ContentEntityBase implements GroupInterface {
           'type' => $plugin->getContentTypeConfigId(),
           'gid' => $this->id(),
           'entity_id' => $account->id(),
+          'request_status' => 1,
         ] + $values);
       $group_content->save();
     }
@@ -185,6 +186,15 @@ class Group extends ContentEntityBase implements GroupInterface {
   /**
    * {@inheritdoc}
    */
+  public function getMemberRequestStatus(AccountInterface $account) {
+    $group_content = $this->membershipLoader()->load($this, $account);
+    $data = $group_content->getGroupContent();
+    return $data->values['request_status']['x-default'];
+  }
+
+  /**
+   * {@inheritdoc}
+   */
   public function getMember(AccountInterface $account) {
     return $this->membershipLoader()->load($this, $account);
   }
diff --git a/src/Entity/GroupContent.php b/src/Entity/GroupContent.php
index 28f3dae..a24498b 100644
--- a/src/Entity/GroupContent.php
+++ b/src/Entity/GroupContent.php
@@ -41,6 +41,8 @@ use Drupal\Core\Entity\Exception\UndefinedLinkTemplateException;
  *       "add" = "Drupal\group\Entity\Form\GroupContentForm",
  *       "edit" = "Drupal\group\Entity\Form\GroupContentForm",
  *       "delete" = "Drupal\group\Entity\Form\GroupContentDeleteForm",
+ *       "approve" = "Drupal\group\Entity\Form\GroupContentApproveForm",
+ *       "reject" = "Drupal\group\Entity\Form\GroupContentRejectForm",
  *     },
  *     "access" = "Drupal\group\Entity\Access\GroupContentAccessControlHandler",
  *   },
@@ -235,6 +237,12 @@ class GroupContent extends ContentEntityBase implements GroupContentInterface {
   /**
    * {@inheritdoc}
    */
+  public function getRequestStatus() {
+    return $this->get('request_status')->value;
+  }
+  /**
+   * {@inheritdoc}
+   */
   public function setOwnerId($uid) {
     $this->set('uid', $uid);
     return $this;
@@ -251,6 +259,14 @@ class GroupContent extends ContentEntityBase implements GroupContentInterface {
   /**
    * {@inheritdoc}
    */
+  public function setRequestStatus($value) {
+    $this->set('request_status', $value);
+    return $this;
+  }
+
+  /**
+   * {@inheritdoc}
+   */
   public function preSave(EntityStorageInterface $storage) {
     parent::preSave($storage);
 
@@ -347,6 +363,13 @@ class GroupContent extends ContentEntityBase implements GroupContentInterface {
       ->setDescription(t('The time that the group content was last edited.'))
       ->setTranslatable(TRUE);
 
+    $fields['request_status'] = BaseFieldDefinition::create('integer')
+      ->setLabel(t('Request Status'))
+      ->setDescription(t('Request mebership status.'))
+      ->setSetting('unsigned', TRUE)
+      ->setDefaultValue(1)
+      ->setTranslatable(TRUE);
+
     return $fields;
   }
 
@@ -415,6 +438,7 @@ class GroupContent extends ContentEntityBase implements GroupContentInterface {
       ->loadByProperties([
         'type' => array_keys($group_content_types),
         'entity_id' => $entity->id(),
+        'request_status' => 0,
       ]);
   }
 
diff --git a/src/Entity/GroupInterface.php b/src/Entity/GroupInterface.php
index b79688f..87ffd53 100644
--- a/src/Entity/GroupInterface.php
+++ b/src/Entity/GroupInterface.php
@@ -106,6 +106,17 @@ interface GroupInterface extends ContentEntityInterface, EntityOwnerInterface, E
   public function getMember(AccountInterface $account);
 
   /**
+   * Retrieves a user's membership request status for the group.
+   *
+   * @param \Drupal\Core\Session\AccountInterface $account
+   *   The user to load the membership for.
+   *
+   * @return \Drupal\group\GroupMembership|false
+   *   The loaded GroupMembership or FALSE if none was found.
+   */
+  public function getMemberRequestStatus(AccountInterface $account);
+
+  /**
    * Retrieves all group memberships for the group.
    *
    * @param string|array $roles
diff --git a/src/Form/GroupCancelRequestMembershipForm.php b/src/Form/GroupCancelRequestMembershipForm.php
new file mode 100644
index 0000000..4d603bc
--- /dev/null
+++ b/src/Form/GroupCancelRequestMembershipForm.php
@@ -0,0 +1,33 @@
+<?php
+
+/**
+ * @file
+ * Contains \Drupal\group\Form\GroupCancelRequestMembershipForm.
+ */
+
+namespace Drupal\group\Form;
+
+use Drupal\group\Entity\Form\GroupContentDeleteForm;
+
+/**
+ * Provides a form for leaving a group.
+ */
+class GroupCancelRequestMembershipForm extends GroupContentDeleteForm {
+
+  /**
+   * {@inheritdoc}
+   */
+  public function getQuestion() {
+    $message = 'Are you sure you want to cancel membership request for %group?';
+    $replace = ['%group' => $this->getEntity()->getGroup()->label()];
+    return $this->t($message, $replace);
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function getConfirmText() {
+    return $this->t('Cancel group mebership request');
+  }
+
+}
diff --git a/src/Form/GroupRequestMembershipForm.php b/src/Form/GroupRequestMembershipForm.php
new file mode 100644
index 0000000..37eff51
--- /dev/null
+++ b/src/Form/GroupRequestMembershipForm.php
@@ -0,0 +1,65 @@
+<?php
+
+/**
+ * @file
+ * Contains \Drupal\group\Form\GroupRequestMembershipForm.
+ */
+
+namespace Drupal\group\Form;
+
+use Drupal\group\Entity\Form\GroupContentForm;
+use Drupal\Core\Form\FormStateInterface;
+
+/**
+ * Provides a Request form for joining a group.
+ */
+class GroupRequestMembershipForm extends GroupContentForm {
+
+  /**
+   * {@inheritdoc}
+   */
+  public function form(array $form, FormStateInterface $form_state) {
+    $form = parent::form($form, $form_state);
+    $form['entity_id']['#access'] = FALSE;
+    $form['group_roles']['#access'] = FALSE;
+    $form['message'] = [
+      '#type' => 'textarea',
+      '#title' => $this->t('Message Body'),
+      '#description' => $this->t('We will attache this message in request membership mail.'),
+    ];
+    return $form;
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function submitForm(array &$form, FormStateInterface $form_state) {
+    parent::submitForm($form, $form_state);
+    $subject = "Requested Membership for a Group";
+    $message = $form_state->getValue('message');
+    $to = $this->config('system.site')->get('mail');
+    $mailManager = \Drupal::service('plugin.manager.mail');
+    $module = 'group';
+    $key = 'immediate_notifications';
+    $params['message'] = $message;
+    $params['subject'] = $subject;
+    $langcode = \Drupal::currentUser()->getPreferredLangcode();
+    $send = true;
+    $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
+    if ($result['result'] !== true) {
+      drupal_set_message(t('There was a problem sending your message and it was not sent.'), 'error');
+    }else {
+      drupal_set_message(t('Mail sent.'), 'status');
+    }
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  protected function actions(array $form, FormStateInterface $form_state) {
+    $actions = parent::actions($form, $form_state);
+    $actions['submit']['#value'] = $this->t('Request Membership group');
+    return $actions;
+  }
+
+}
diff --git a/src/Plugin/GroupContentEnabler/GroupMembership.php b/src/Plugin/GroupContentEnabler/GroupMembership.php
index 18584e7..53959cc 100644
--- a/src/Plugin/GroupContentEnabler/GroupMembership.php
+++ b/src/Plugin/GroupContentEnabler/GroupMembership.php
@@ -42,7 +42,13 @@ class GroupMembership extends GroupContentEnablerBase {
     $operations = [];
 
     if ($group->getMember($account)) {
-      if ($group->hasPermission('leave group', $account)) {
+      if($group->getMemberRequestStatus($account) == 0) {
+        $operations['group-cancel'] = [
+          'title' => $this->t('Cancel requested membership'),
+          'url' => new Url($this->getRouteName('cancel-membership-form'), ['group' => $group->id()]),
+          'weight' => 99,
+        ];
+      }elseif ($group->hasPermission('leave group', $account)) {
         $operations['group-leave'] = [
           'title' => $this->t('Leave group'),
           'url' => new Url($this->getRouteName('leave-form'), ['group' => $group->id()]),
@@ -57,6 +63,13 @@ class GroupMembership extends GroupContentEnablerBase {
         'weight' => 0,
       ];
     }
+    if ($group->hasPermission('request group membership', $account) && (!$group->getMember($account))) {
+      $operations['group-request'] = [
+        'title' => $this->t('Request group membership'),
+        'url' => new Url($this->getRouteName('request-membership-form'), ['group' => $group->id()]),
+        'weight' => 0,
+      ];
+    }
 
     return $operations;
   }
@@ -68,6 +81,8 @@ class GroupMembership extends GroupContentEnablerBase {
     return [
       'group-join' => 'Drupal\group\Form\GroupJoinForm',
       'group-leave' => 'Drupal\group\Form\GroupLeaveForm',
+      'group-request' => 'Drupal\group\Form\GroupRequestMembershipForm',
+      'group-cancel' => 'Drupal\group\Form\GroupCancelRequestMembershipForm',
     ];
   }
 
@@ -95,6 +110,11 @@ class GroupMembership extends GroupContentEnablerBase {
       'allowed for' => ['member'],
     ];
 
+    $permissions['request group membership'] = [
+      'title' => 'Request group membership',
+      'allowed for' => ['outsider'],
+    ];
+
     // Update the labels of the default permissions.
     $permissions['access group_membership overview']['title'] = 'Access the member overview page';
     $permissions['view group_membership content']['title'] = 'View individual group members';
@@ -119,6 +139,8 @@ class GroupMembership extends GroupContentEnablerBase {
     return parent::getPaths() + [
       'join-form' => '/group/{group}/join',
       'leave-form' => '/group/{group}/leave',
+      'request-membership-form' => '/group/{group}/requestMembership',
+      'cancel-membership-form' => '/group/{group}/cancelMembership',
     ];
   }
 
@@ -192,6 +214,57 @@ class GroupMembership extends GroupContentEnablerBase {
   }
 
   /**
+   * Gets the leave form route.
+   *
+   * @return \Symfony\Component\Routing\Route|null
+   *   The generated route, if available.
+   */
+  protected function getRequestMembershipFormRoute() {
+    if ($path = $this->getPath('request-membership-form')) {
+      $route = new Route($path);
+
+      $route
+        ->setDefaults([
+          '_controller' => '\Drupal\group\Controller\GroupMembershipController::requestMembership',
+          '_title_callback' => '\Drupal\group\Controller\GroupMembershipController::requestMembershipTitle',
+          'plugin_id' => $this->getPluginId(),
+        ])
+        ->setRequirement('_group_permission', 'request group membership')
+        ->setRequirement('_group_member', 'FALSE')
+        ->setOption('parameters', [
+          'group' => ['type' => 'entity:group'],
+        ]);
+
+      return $route;
+    }
+  }
+
+  /**
+   * Gets the cancel membership form route.
+   *
+   * @return \Symfony\Component\Routing\Route|null
+   *   The generated route, if available.
+   */
+  protected function getCancelMembershipFormRoute() {
+    if ($path = $this->getPath('cancel-membership-form')) {
+      $route = new Route($path);
+
+      $route
+        ->setDefaults([
+          '_controller' => '\Drupal\group\Controller\GroupMembershipController::cancelMembership',
+          '_title_callback' => '\Drupal\group\Controller\GroupMembershipController::cancelMembershipTitle',
+          'plugin_id' => $this->getPluginId(),
+        ])
+        ->setRequirement('_group_member', 'TRUE')
+        ->setOption('parameters', [
+          'group' => ['type' => 'entity:group'],
+        ]);
+
+      return $route;
+    }
+  }
+
+  /**
    * {@inheritdoc}
    */
   public function getRoutes() {
@@ -205,6 +278,14 @@ class GroupMembership extends GroupContentEnablerBase {
       $routes[$this->getRouteName('leave-form')] = $route;
     }
 
+    if ($route = $this->getRequestMembershipFormRoute()) {
+      $routes[$this->getRouteName('request-membership-form')] = $route;
+    }
+
+    if ($route = $this->getCancelMembershipFormRoute()) {
+      $routes[$this->getRouteName('cancel-membership-form')] = $route;
+    }
+
     return $routes;
   }
 
diff --git a/src/Plugin/GroupContentEnablerBase.php b/src/Plugin/GroupContentEnablerBase.php
index 42e8f5c..0f3054c 100644
--- a/src/Plugin/GroupContentEnablerBase.php
+++ b/src/Plugin/GroupContentEnablerBase.php
@@ -226,10 +226,13 @@ abstract class GroupContentEnablerBase extends PluginBase implements GroupConten
     $path_key = $this->pluginDefinition['path_key'];
     return empty($path_key) ? [] : [
       'collection' => "/group/{group}/$path_key",
+      'pending-collection' => "/group/{group}/pending-$path_key",
       'add-form' => "/group/{group}/$path_key/add",
       'canonical' => "/group/{group}/$path_key/{group_content}",
       'edit-form' => "/group/{group}/$path_key/{group_content}/edit",
       'delete-form' => "/group/{group}/$path_key/{group_content}/delete",
+      'approve-form' => "/group/{group}/$path_key/{group_content}/approve",
+      'reject-form' => "/group/{group}/$path_key/{group_content}/reject",
     ];
   }
 
@@ -277,6 +280,36 @@ abstract class GroupContentEnablerBase extends PluginBase implements GroupConten
     }
   }
 
+   /**
+   * Gets the collection route.
+   *
+   * @return \Symfony\Component\Routing\Route|null
+   *   The generated route, if available.
+   */
+  protected function getPendingCollectionRoute() {
+
+    if ($path = $this->getPath('pending-collection')) {
+      $plugin_id = $this->getPluginId();
+      $route = new Route($path);
+
+      $route
+        ->setDefaults([
+          '_entity_list' => 'group_content',
+          '_title_callback' => '\Drupal\Core\Entity\Controller\EntityController::title',
+          'plugin_id' => $plugin_id,
+        ])
+        ->setRequirement('_group_permission', "access $plugin_id overview")
+        ->setRequirement('_group_installed_content', $plugin_id)
+
+        ->setOption('_group_operation_route', TRUE)
+        ->setOption('parameters', [
+          'group' => ['type' => 'entity:group', 'request_status' => '0'],
+        ]);
+
+      return $route;
+    }
+  }
+
   /**
    * Gets the canonical route.
    *
@@ -385,6 +418,60 @@ abstract class GroupContentEnablerBase extends PluginBase implements GroupConten
   }
 
   /**
+   * Gets the delete form route.
+   *
+   * @return \Symfony\Component\Routing\Route|null
+   *   The generated route, if available.
+   */
+  protected function getApproveFormRoute() {
+    if ($path = $this->getPath('approve-form')) {
+      $route = new Route($path);
+
+      $route
+        ->setDefaults([
+          '_entity_form' => 'group_content.approve',
+          '_title_callback' => '\Drupal\Core\Entity\Controller\EntityController::editTitle',
+        ])
+        ->setRequirement('_entity_access', 'group_content.update')
+        ->setRequirement('_group_owns_content', 'TRUE')
+        ->setOption('_group_operation_route', TRUE)
+        ->setOption('parameters', [
+          'group' => ['type' => 'entity:group'],
+          'group_content' => ['type' => 'entity:group_content'],
+        ]);
+
+      return $route;
+    }
+  }
+
+  /**
+   * Gets the reject form route.
+   *
+   * @return \Symfony\Component\Routing\Route|null
+   *   The generated route, if available.
+   */
+  protected function getRejectFormRoute() {
+    if ($path = $this->getPath('reject-form')) {
+      $route = new Route($path);
+
+      $route
+        ->setDefaults([
+          '_entity_form' => 'group_content.reject',
+          '_title_callback' => '\Drupal\Core\Entity\Controller\EntityController::deleteTitle',
+        ])
+        ->setRequirement('_entity_access', 'group_content.delete')
+        ->setRequirement('_group_owns_content', 'TRUE')
+        ->setOption('_group_operation_route', TRUE)
+        ->setOption('parameters', [
+          'group' => ['type' => 'entity:group'],
+          'group_content' => ['type' => 'entity:group_content'],
+        ]);
+
+      return $route;
+    }
+  }
+
+  /**
    * {@inheritdoc}
    */
   public function getRoutes() {
@@ -394,6 +481,10 @@ abstract class GroupContentEnablerBase extends PluginBase implements GroupConten
       $routes[$this->getRouteName('collection')] = $route;
     }
 
+    if ($route = $this->getPendingCollectionRoute()) {
+      $routes[$this->getRouteName('pending-collection')] = $route;
+    }
+
     if ($route = $this->getCanonicalRoute()) {
       $routes[$this->getRouteName('canonical')] = $route;
     }
@@ -410,6 +501,13 @@ abstract class GroupContentEnablerBase extends PluginBase implements GroupConten
       $routes[$this->getRouteName('delete-form')] = $route;
     }
 
+    if ($route = $this->getApproveFormRoute()) {
+      $routes[$this->getRouteName('approve-form')] = $route;
+    }
+
+    if ($route = $this->getRejectFormRoute()) {
+      $routes[$this->getRouteName('reject-form')] = $route;
+    }
     return $routes;
   }
 
@@ -428,6 +526,15 @@ abstract class GroupContentEnablerBase extends PluginBase implements GroupConten
       ];
     }
 
+    if (($appears_on = $this->getRouteName('pending-collection')) && ($route_name = $this->getRouteName('add-form'))) {
+      $prefix = str_replace(':', '-', $this->getPluginId());
+      $actions["$prefix.add"] = [
+        'title' => 'Add ' . $this->getLabel(),
+        'route_name' => $route_name,
+        'appears_on' => [$appears_on],
+      ];
+    }
+
     return $actions;
   }
 

diff --git a/draggableviews.module b/draggableviews.module
index eaba8c8..f54113f 100644
--- a/draggableviews.module
+++ b/draggableviews.module
@@ -112,8 +112,14 @@ function draggableviews_preprocess_views_view_table(&$variables) {
     $variables['rows'][$key]['columns'][$first_column]['content'][0]['field_output']['#markup'] = (string) (render($indent) . $columns_title);
   }
 
-  // Add table attributes.
-  $variables['attributes']['id'] = $draggableviews->getHtmlId();
+  // Get an array of field group titles.
+  $fieldGrouping = $draggableviews->fieldGrouping();
+  foreach ($fieldGrouping as $key => $row) {
+    if (trim(strip_tags($variables['title'])) == trim(strip_tags($row))) {
+      // Add table attributes.
+      $variables['attributes']['id'] = $draggableviews->getHtmlId($key);
+    }
+  }
 
   // Add rows attributes.
   foreach ($variables['rows'] as &$row) {
diff --git a/src/DraggableViews.php b/src/DraggableViews.php
index 256fecb..6e5b014 100644
--- a/src/DraggableViews.php
+++ b/src/DraggableViews.php
@@ -82,11 +82,53 @@ class DraggableViews {
     return $this->view->result[$index]->$name;
   }
 
+  /**
+   * Return array of field groups titles.
+   */
+  public function fieldGrouping() {
+    $fieldGrouping = [];
+    $sets = $this->view->style_plugin->renderGrouping($this->view->result, $this->view->style_plugin->options['grouping'], FALSE);
+    $flatten_sets = $this->flattenGroups($sets);
+    foreach ($flatten_sets as $title => $rows) {
+      $fieldGrouping[] = $title;
+    }
+
+    return $fieldGrouping;
+  }
+
   /**
    * Get HTML id for draggableviews table.
    */
-  public function getHtmlId() {
-    return Html::getId('draggableviews-table-' . $this->view->id() . '-' . $this->view->current_display);
+  public function getHtmlId($index) {
+    return Html::getId('draggableviews-table-' . $this->view->id() . '-' . $this->view->current_display . '-' . $index);
+  }
+
+  /**
+   * Recursively flatten groups.
+   *
+   * @param array $sets
+   *   Result set.
+   *
+   * @return array
+   *   List of groups keyed by original key.
+   */
+  protected static function flattenGroups(array $sets) {
+    $flatten = [];
+
+    foreach ($sets as $key => $set) {
+      $set_rows = $set['rows'];
+      if (!is_numeric(key($set_rows))) {
+        $subsets = self::flattenGroups($set_rows);
+        if ($subsets) {
+          $flatten = array_merge($flatten, $subsets);
+        }
+      }
+      else {
+        $flatten[$key] = $set_rows;
+      }
+    }
+
+    return $flatten;
   }
 
 }
diff --git a/src/Plugin/views/field/DraggableViewsField.php b/src/Plugin/views/field/DraggableViewsField.php
index 14d0dab..79e1f7d 100755
--- a/src/Plugin/views/field/DraggableViewsField.php
+++ b/src/Plugin/views/field/DraggableViewsField.php
@@ -141,15 +141,19 @@ class DraggableViewsField extends BulkForm {
     }
 
     if ($this->currentUser->hasPermission('access draggableviews')) {
-      $options = [
-        'table_id' => $draggableviews->getHtmlId(),
-        'action' => 'match',
-        'relationship' => 'group',
-        'group' => 'draggableviews-parent',
-        'subgroup' => 'draggableviews-parent',
-        'source' => 'draggableviews-id',
-      ];
-      drupal_attach_tabledrag($form, $options);
+      // Get an array of field group titles.
+      $fieldGrouping = $draggableviews->fieldGrouping();
+      foreach ($fieldGrouping as $key => $row) {
+        $options = [
+          'table_id' => $draggableviews->getHtmlId($key),
+          'action' => 'match',
+          'relationship' => 'parent',
+          'group' => 'draggableviews-parent',
+          'subgroup' => 'draggableviews-parent',
+          'source' => 'draggableviews-id',
+        ];
+        drupal_attach_tabledrag($form, $options);
+      }
     }
   }
 

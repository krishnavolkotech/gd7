diff --git a/modules/contrib/facets/facets.module b/modules/contrib/facets/facets.module
index 6c04f21a0..3b9fff61b 100644
--- a/modules/contrib/facets/facets.module
+++ b/modules/contrib/facets/facets.module
@@ -15,6 +15,7 @@
 use Drupal\facets\Entity\Facet;
 use Drupal\facets\Entity\FacetSource;
 use Drupal\facets\FacetInterface;
+use Drupal\search_api\Query\QueryInterface;
 use Drupal\views\Entity\View;
 use Drupal\Core\Entity\EntityInterface;
 use Symfony\Component\DependencyInjection\Exception\ServiceNotFoundException;
@@ -70,6 +71,25 @@ function facets_theme($existing, $type, $theme, $path) {
   ];
 }
 
+/**
+ * Implements hook_search_api_query_alter().
+ */
+function facets_search_api_query_alter(QueryInterface &$query) {
+  if ($query->getIndex()->getServerInstance()->supportsFeature('search_api_facets')) {
+    /** @var \Drupal\facets\FacetManager\DefaultFacetManager $facet_manager */
+    $facet_manager = \Drupal::service('facets.manager');
+
+    // It's safe to hardcode this to the search api scheme because this is in a
+    // search_api_query_alter method. If this generated source is not correct,
+    // implementing the same alter and directly calling
+    // $manager->alterQuery($query, $your_facetsource_id); will fix that.
+    $facet_source = 'search_api:' . str_replace(':', '__', $query->getSearchId());
+
+    // Add the active filters.
+    $facet_manager->alterQuery($query, $facet_source);
+  }
+}
+
 /**
  * Implements hook_entity_presave().
  *

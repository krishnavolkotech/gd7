diff --git a/modules/contrib/group/group.install b/modules/contrib/group/group.install
index 5cfb4df7d..02a924649 100644
--- a/modules/contrib/group/group.install
+++ b/modules/contrib/group/group.install
@@ -11,6 +11,24 @@
 use Drupal\Core\Entity\EntityTypeListenerInterface;
 use Drupal\Core\Entity\Sql\SqlContentEntityStorage;
 
+/*
+ * Added for a new field in group content entity
+ *
+ */
+function group_update_8103() {
+    $database = \Drupal::database();
+    $schema = $database->schema();
+    $spec = array(
+        'description' => 'Request status code.',
+        'type' => 'int',
+        'size' => 'small',
+        'unsigned' => TRUE,
+        'not null' => TRUE,
+        'default' => 1,
+      );
+    $schema->addField('group_content_field_data', 'request_status', $spec);
+  }
+
 /**
  * Resave all GroupContent labels and remove orphaned entities.
  */
diff --git a/modules/contrib/group/group.routing.yml b/modules/contrib/group/group.routing.yml
index 7e855de7d..2a45daf52 100644
--- a/modules/contrib/group/group.routing.yml
+++ b/modules/contrib/group/group.routing.yml
@@ -26,6 +26,15 @@ entity.group.leave:
     _group_permission: 'leave group'
     _group_member: 'TRUE'
 
+entity.group.request:
+  path: '/group/{group}/request'
+  defaults:
+    _controller: '\Drupal\group\Controller\GroupMembershipController::requestMembership'
+    _title_callback: '\Drupal\group\Controller\GroupMembershipController::requestMembershipTitle'
+  requirements:
+    _group_permission: 'request group membership'
+    _group_member: 'FALSE'
+
 # Group type entity routes.
 # Common entity routes are generated by \Drupal\group\Entity\Routing\GroupTypeRouteProvider.
 entity.group_type.permissions_form:
diff --git a/modules/contrib/group/src/Controller/GroupMembershipController.php b/modules/contrib/group/src/Controller/GroupMembershipController.php
index 75ad79f71..c350f1b41 100644
--- a/modules/contrib/group/src/Controller/GroupMembershipController.php
+++ b/modules/contrib/group/src/Controller/GroupMembershipController.php
@@ -72,12 +72,61 @@ public function join(GroupInterface $group) {
       'type' => $plugin->getContentTypeConfigId(),
       'gid' => $group->id(),
       'entity_id' => $this->currentUser->id(),
+      'request_status' => 1,
     ]);
 
     return $this->entityFormBuilder->getForm($group_content, 'group-join');
   }
 
   /**
+   * Provides the Request membership form for joining a group.
+   *
+   * @param \Drupal\group\Entity\GroupInterface $group
+   *   The group to join.
+   *
+   * @return array
+   *   A group join form.
+   */
+  public function requestMembership(GroupInterface $group) {
+    /** @var \Drupal\group\Plugin\GroupContentEnablerInterface $plugin */
+    $plugin = $group->getGroupType()->getContentPlugin('group_membership');
+    // Pre-populate a group membership with the current user.
+    $group_content = GroupContent::create([
+      'type' => $plugin->getContentTypeConfigId(),
+      'gid' => $group->id(),
+      'entity_id' => $this->currentUser->id(),
+      'request_status' => 0,
+    ]);
+    return $this->entityFormBuilder()->getForm($group_content, 'group-request');
+  }
+
+  /**
+   * The _title_callback for the request membership form route.
+   *
+   * @param \Drupal\group\Entity\GroupInterface $group
+   *   The group to join.
+   *
+   * @return string
+   *   The page title.
+   */
+  public function requestMembershipTitle(GroupInterface $group) {
+    return $this->t('Request membership group %label', ['%label' => $group->label()]);
+  }
+
+  /**
+   * The _title_callback for the request membership form route.
+   *
+   * @param \Drupal\group\Entity\GroupInterface $group
+   *   The group to join.
+   *
+   * @return string
+   *   The page title.
+   */
+  public function cancelMembershipTitle(GroupInterface $group) {
+    return $this->t('Cancel membership request for group %label', ['%label' => $group->label()]);
+  }
+
+  /**
    * The _title_callback for the join form route.
    *
    * @param \Drupal\group\Entity\GroupInterface $group
diff --git a/modules/contrib/group/src/Entity/Group.php b/modules/contrib/group/src/Entity/Group.php
index 6d90179ca..566ed7270 100644
--- a/modules/contrib/group/src/Entity/Group.php
+++ b/modules/contrib/group/src/Entity/Group.php
@@ -191,6 +191,15 @@ public function getContentEntities($plugin_id = NULL, $filters = []) {
     return $entities;
   }
 
+  public function getMemberRequestStatus(AccountInterface $account) {
+    $group_content = $this->membershipLoader()->load($this, $account);
+    if($group_content){
+      $data = $group_content->getGroupContent();
+      return $data->get('request_status')->value;
+    }
+    return false;
+  }
+
   /**
    * {@inheritdoc}
    */
diff --git a/modules/contrib/group/src/Entity/GroupContent.php b/modules/contrib/group/src/Entity/GroupContent.php
index 38728449e..c0892d4ae 100644
--- a/modules/contrib/group/src/Entity/GroupContent.php
+++ b/modules/contrib/group/src/Entity/GroupContent.php
@@ -39,6 +39,9 @@
  *       "delete" = "Drupal\group\Entity\Form\GroupContentDeleteForm",
  *       "group-join" = "Drupal\group\Form\GroupJoinForm",
  *       "group-leave" = "Drupal\group\Form\GroupLeaveForm",
+ *       "approve" = "Drupal\group\Entity\Form\GroupContentApproveForm",
+ *       "reject" = "Drupal\group\Entity\Form\GroupContentRejectForm",
+ *       "group-request" = "Drupal\group\Form\GroupRequestMembershipForm",
  *     },
  *     "access" = "Drupal\group\Entity\Access\GroupContentAccessControlHandler",
  *   },
@@ -241,6 +244,15 @@ public static function postDelete(EntityStorageInterface $storage, array $entiti
       }
     }
   }
+  
+  public function getRequestStatus() {
+    return $this->get('request_status')->value;
+  }
+  
+  public function setRequestStatus($value) {
+    $this->set('request_status', $value);
+    return $this;
+  }
 
   /**
    * {@inheritdoc}
@@ -302,7 +314,14 @@ public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {
       ->setLabel(t('Changed on'))
       ->setDescription(t('The time that the group content was last edited.'))
       ->setTranslatable(TRUE);
-
+    
+    $fields['request_status'] = BaseFieldDefinition::create('integer')
+      ->setLabel(t('Request Status'))
+      ->setDescription(t('Request mebership status.'))
+      ->setSetting('unsigned', TRUE)
+      ->setDefaultValue(1)
+      ->setTranslatable(TRUE);
+    
     if (\Drupal::moduleHandler()->moduleExists('path')) {
       $fields['path'] = BaseFieldDefinition::create('path')
         ->setLabel(t('URL alias'))
diff --git a/modules/contrib/group/src/Entity/GroupInterface.php b/modules/contrib/group/src/Entity/GroupInterface.php
index f6477fc59..042aa6f3e 100644
--- a/modules/contrib/group/src/Entity/GroupInterface.php
+++ b/modules/contrib/group/src/Entity/GroupInterface.php
@@ -124,6 +124,18 @@ public function removeMember(UserInterface $account);
    *   The loaded GroupMembership or FALSE if none was found.
    */
   public function getMember(AccountInterface $account);
+  
+  /**
+   * Retrieves a user's membership request status for the group.
+   *
+   * @param \Drupal\Core\Session\AccountInterface $account
+   *   The user to load the membership for.
+   *
+   * @return \Drupal\group\GroupMembership|false
+   *   The loaded GroupMembership or FALSE if none was found.
+   */
+
+  public function getMemberRequestStatus(AccountInterface $account);
 
   /**
    * Retrieves all group memberships for the group.
diff --git a/modules/contrib/group/src/Plugin/GroupContentEnabler/GroupMembership.php b/modules/contrib/group/src/Plugin/GroupContentEnabler/GroupMembership.php
index d8a567374..d6e4339f0 100644
--- a/modules/contrib/group/src/Plugin/GroupContentEnabler/GroupMembership.php
+++ b/modules/contrib/group/src/Plugin/GroupContentEnabler/GroupMembership.php
@@ -38,7 +38,13 @@ public function getGroupOperations(GroupInterface $group) {
     $operations = [];
 
     if ($group->getMember($account)) {
-      if ($group->hasPermission('leave group', $account)) {
+      if($group->getMemberRequestStatus($account) == 0) {
+        $operations['group-cancel'] = [
+          'title' => $this->t('Cancel requested membership'),
+          'url' => new Url($this->getRouteName('cancel-membership-form'), ['group' => $group->id()]),
+          'weight' => 99,
+        ];
+      }elseif ($group->hasPermission('leave group', $account)) {
         $operations['group-leave'] = [
           'title' => $this->t('Leave group'),
           'url' => new Url('entity.group.leave', ['group' => $group->id()]),
@@ -53,6 +59,13 @@ public function getGroupOperations(GroupInterface $group) {
         'weight' => 0,
       ];
     }
+    if ($group->hasPermission('request group membership', $account) && (!$group->getMember($account))) {
+      $operations['group-request'] = [
+        'title' => $this->t('Request group membership'),
+        'url' => new Url($this->getRouteName('request-membership-form'), ['group' => $group->id()]),
+        'weight' => 0,
+      ];
+    }
 
     return $operations;
   }
@@ -79,7 +92,12 @@ protected function getGroupContentPermissions() {
       'title' => '%plugin_name: Leave group',
       'allowed for' => ['member'],
     ] + $defaults;
-
+    
+    $permissions['request group membership'] = [
+      'title' => 'Request group membership',
+      'allowed for' => ['outsider'],
+    ] + $defaults;
+    
     // Update the labels of the default permissions.
     $permissions['view group_membership content']['title'] = '%plugin_name: View individual group members';
     $permissions['update own group_membership content']['title'] = '%plugin_name: Edit own membership';

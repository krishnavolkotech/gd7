diff --git a/vendor/dompdf/dompdf/src/Image/Cache.php b/vendor/dompdf/dompdf/src/Image/Cache.php
index e8749e8..05e97d2 100644
--- a/vendor/dompdf/dompdf/src/Image/Cache.php
+++ b/vendor/dompdf/dompdf/src/Image/Cache.php
@@ -57,6 +57,21 @@ class Cache
      */
     static function resolve_url($url, $protocol, $host, $base_path, Dompdf $dompdf)
     {
+      $pp = explode('/', $url);
+
+      if ($pp[1] == 'system' && $pp[2] == 'files') {
+        $temp_path = 'sites/default/files/temp/';
+        if (!is_dir($temp_path)) {
+          mkdir($temp_path);
+        }
+        $private_path = \Drupal::service('file_system')->realpath("private://");
+        $private_path = substr($private_path, strpos($private_path, 'sites'));
+        $final_path = str_replace("/system/files", $private_path, $url);
+        $filename = end(explode('/', $final_path));
+        copy($final_path, $temp_path . $filename);
+        $filename = end(explode('/', $final_path));
+        $url = '/' . $temp_path . $filename;
+      }
         self::$_dompdf = $dompdf;
         
         $protocol = mb_strtolower($protocol);
@@ -137,12 +152,11 @@ static function resolve_url($url, $protocol, $host, $base_path, Dompdf $dompdf)
                 }
             }
         } catch (ImageException $e) {
-            //$resolved_url = self::$broken_image;
-            $resolved_url = "themes/hzd/images/broken-image.png";
+            $resolved_url = self::$broken_image;
             $type = "png";
-            //$message = "Image removed";
+            $message = "Image removed";
             //Skipping the error recording for broken images as we are using private files in WYSIWIG editors.
-//            Helpers::record_warnings($e->getCode(), $e->getMessage() . " \n $url", $e->getFile(), $e->getLine());
+            Helpers::record_warnings($e->getCode(), $e->getMessage() . " \n $url", $e->getFile(), $e->getLine());
         }
 
         return array($resolved_url, $type, $message);
